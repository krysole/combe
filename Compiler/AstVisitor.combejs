// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var AstVisitor = (module.exports = Object.subclass((function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "visit", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
self.new().visit(ast);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "defaultVisitOrder", "PreOrder");
__combe_defineValueProperty(__combe_object, "handleUnspecifiedType", null);
__combe_defineValueProperty(__combe_object, "recurseOverUnspecifiedTypes", true);
__combe_defineValueProperty(__combe_object, "visit", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
assert(__combe_infixOperators["!="](self.defaultVisitOrder, null));
var orderingMethod = self[("visitWithOrder_" + self.defaultVisitOrder)];
(/* if */ __combe_infixOperators["!="](orderingMethod, null)
? /* then */ (function () {
var method = self[ast.type];
(/* if */ __combe_infixOperators["!="](method, null)
? /* then */ (function () {
(function () { throw (__combe_return = { value: orderingMethod.call(self, ast, method) }); })();
})()
: /* else */ (/* if */ __combe_infixOperators["!="](self.handleUnknownType, null)
? /* then */ (function () {
(/* if */ self.recurseOverUnspecifiedTypes
? /* then */ (function () {
(function () { throw (__combe_return = { value: orderingMethod.call(self, ast, self.handleUnspecifiedType) }); })();
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: self.visitWithOrder_NoOrder(ast, self.handleUnspecifiedType) }); })();
})());
})()
: /* else */ (/* if */ self.recurseOverUnspecifiedTypes
? /* then */ (function () {
self.visitChildren(ast);
(function () { throw (__combe_return = { value: null }); })();
})()
: /* else */ (function () {
(function () { throw Error.new((("Unhandled Ast Node Type '" + ast.type) + "'")); })();
})())));
})()
: /* else */ (function () {
(function () { throw Error.new((("Invalid visit order '" + self.defaultVisitOrder) + "'")); })();
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitWithOrder_NoOrder", (function (ast, method) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(function () { throw (__combe_return = { value: method.call(self, ast) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitWithOrder_PreOrder", (function (ast, method) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
self.visitChildren(ast);
(function () { throw (__combe_return = { value: method.call(self, ast) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitWithOrder_PostOrder", (function (ast, method) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var result = method.call(self, ast);
self.visitChildren(ast);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitChildren", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(function () { throw (__combe_return = { value: self.visitAll(ast.children) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitAll", (function (array) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(function () { throw (__combe_return = { value: array.map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return self.visit(a);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();