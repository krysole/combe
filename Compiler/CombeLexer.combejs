// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var CombeLexer = (module.exports = LexicalGrammar.subclass((function () {
var __combe_object = {};
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "name", "CombeLexer");
__combe_defineValueProperty(__combe_object, "initialize", (function (source, sourcename) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
CombeLexer.prototype.__proto__.initialize.call(self, source, sourcename);
(self.emitNewline = false);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "nextToken", (function () {
return this.__combe_memoize("x9IP19C23vRpdnNFueAWrQ", (function () {
var self = this;
return (function () {
(function () {
return this.__combe_optional(this.ws);
}).call(this);
this.newlineToken.call(this);
this.resetToken.call(this);
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.identifier, this.number);
}), this.operatorAssignment);
}), this.punctuation);
}), this.string);
}), this.regex);
}), (function () {
this.eof.call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, "eof");
}).call(this);
}));
}), (function () {
var __combe_this = this;
return this.error.call(this, ("Lexer failed at position " + self.positionString()));
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "newlineToken", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var indentColumn = (self.lineColumn().subscript(1) - 1);
(/* if */ ((self.emitNewline && (!self.isEof())) && (__combe_infixOperators["!="](self.tokenPosition, 0) || (indentColumn > 0)))
? /* then */ (function () {
self.emit("newline", (self.lineColumn().subscript(1) - 1));
})()
: /* else */ null);
(self.emitNewline = false);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "identifier", (function () {
return this.__combe_memoize("5lLPa4yS99DHuJJj7DjG/g", (function () {
var self = this;
var token;
return (function () {
(function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("r/");
}));
}).call(this);
this.initialIdChar.call(this);
(function () {
return this.__combe_repeat(this.idChar);
}).call(this);
(function () {
return (token = (function () {
var __combe_this = this;
return this.emit.call(this, "identifier");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (token.reserved = self.ReservedWords.include(token.text));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return token;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ReservedWords", ["var", "if", "else", "while", "do", "for", "return", "break", "continue", "try", "catch", "finally", "this", "null", "undefined", "true", "false"]);
__combe_defineValueProperty(__combe_object, "operatorAssignment", (function () {
return this.__combe_memoize("6B/LrN4Bz9iydj1YhBuNFg", (function () {
var self = this;
return (function () {
(function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("+=");
}), (function () {
return this.handleStringPattern("-=");
}));
}), (function () {
return this.handleStringPattern("*=");
}));
}), (function () {
return this.handleStringPattern("/=");
}));
}), (function () {
return this.handleStringPattern("%=");
}));
}), (function () {
return this.handleStringPattern("&=");
}));
}), (function () {
return this.handleStringPattern("|=");
}));
}), (function () {
return this.handleStringPattern("^=");
}));
}), (function () {
return this.handleStringPattern("<<=");
}));
}), (function () {
return this.handleStringPattern(">>>=");
}));
}), (function () {
return this.handleStringPattern(">>=");
}));
}).call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, "operatorAssignment");
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "punctuation", (function () {
return this.__combe_memoize("1OFbwUzFIGp6PA1olNXoIg", (function () {
var self = this;
var text;
return (function () {
(function () {
return (text = (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("{");
}), (function () {
return this.handleStringPattern("}");
}));
}), (function () {
return this.handleStringPattern("(");
}));
}), (function () {
return this.handleStringPattern(")");
}));
}), (function () {
return this.handleStringPattern("[");
}));
}), (function () {
return this.handleStringPattern("]");
}));
}), (function () {
return this.handleStringPattern(";");
}));
}), (function () {
return this.handleStringPattern(",");
}));
}), (function () {
return this.handleStringPattern("<<");
}));
}), (function () {
return this.handleStringPattern(">>>");
}));
}), (function () {
return this.handleStringPattern(">>");
}));
}), (function () {
return this.handleStringPattern("<=");
}));
}), (function () {
return this.handleStringPattern(">=");
}));
}), (function () {
return this.handleStringPattern("<");
}));
}), (function () {
return this.handleStringPattern(">");
}));
}), (function () {
return this.handleStringPattern("===");
}));
}), (function () {
return this.handleStringPattern("!==");
}));
}), (function () {
return this.handleStringPattern("==");
}));
}), (function () {
return this.handleStringPattern("!=");
}));
}), (function () {
return this.handleStringPattern("!");
}));
}), (function () {
return this.handleStringPattern("=");
}));
}), (function () {
return this.handleStringPattern("...");
}));
}), (function () {
return this.handleStringPattern("..");
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
return (function () {
return this.__combe_not(this.digit);
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return ".";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
return this.handleStringPattern("->");
}));
}), (function () {
return this.handleStringPattern("#");
}));
}), (function () {
return this.handleStringPattern("&&");
}));
}), (function () {
return this.handleStringPattern("||");
}));
}), (function () {
return this.handleStringPattern("^^");
}));
}), (function () {
return this.handleStringPattern("&");
}));
}), (function () {
return this.handleStringPattern("|");
}));
}), (function () {
return this.handleStringPattern("^");
}));
}), (function () {
return this.handleStringPattern("++");
}));
}), (function () {
return this.handleStringPattern("--");
}));
}), (function () {
return this.handleStringPattern("+");
}));
}), (function () {
return this.handleStringPattern("-");
}));
}), (function () {
return this.handleStringPattern("*");
}));
}), (function () {
return this.handleStringPattern("/");
}));
}), (function () {
return this.handleStringPattern("%");
}));
}), (function () {
return this.handleStringPattern("~");
}));
}), (function () {
return this.handleStringPattern("?");
}));
}), (function () {
return this.handleStringPattern("::");
}));
}), (function () {
return this.handleStringPattern(":");
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, text);
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "number", (function () {
return this.__combe_memoize("Q6vhgN6BS+hJWR5nd1hx3w", (function () {
var self = this;
return (function () {
return this.__combe_choice(this.decimal, this.hexInteger);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "decimal", (function () {
return this.__combe_memoize("KEX3D4LwotazsLi1qQ1TCQ", (function () {
var self = this;
var text;
return (function () {
(function () {
return (text = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
return this.__combe_choice((function () {
this.integerPart.call(this);
(function () {
return this.__combe_optional((function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
return (function () {
return this.__combe_repeat(this.digit);
}).call(this);
}));
}).call(this);
return (function () {
return this.__combe_optional(this.exponentPart);
}).call(this);
}), (function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
(function () {
return this.__combe_nonZeroRepeat(this.digit);
}).call(this);
return (function () {
return this.__combe_optional(this.exponentPart);
}).call(this);
}));
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_not(this.idChar);
}).call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, "number", parseFloat(text));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "integerPart", (function () {
return this.__combe_memoize("LiS+BRZctmY478WRYB468g", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
return this.handleStringPattern("0");
}), (function () {
(function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("1", "9"));
}).call(this);
return (function () {
return this.__combe_repeat(this.digit);
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "exponentPart", (function () {
return this.__combe_memoize("Ez2XT2VTU0o25Z6MZ4dmKA", (function () {
var self = this;
return (function () {
(function () {
return this.__combe_choice((function () {
return this.handleStringPattern("e");
}), (function () {
return this.handleStringPattern("E");
}));
}).call(this);
(function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("+");
}), (function () {
return this.handleStringPattern("-");
}));
}), this.nothing);
}).call(this);
return (function () {
return this.__combe_nonZeroRepeat(this.digit);
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "hexInteger", (function () {
return this.__combe_memoize("eri49xD/dORmVyrHWByEag", (function () {
var self = this;
var text;
return (function () {
(function () {
return this.__combe_choice((function () {
return this.handleStringPattern("0x");
}), (function () {
return this.handleStringPattern("0X");
}));
}).call(this);
(function () {
return (text = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
return this.__combe_nonZeroRepeat(this.hexDigit);
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_not(this.idChar);
}).call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, "number", parseInt(text, 16));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "string", (function () {
return this.__combe_memoize("VNTrQRnOMWezcdRD5KUzoA", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
var __combe_this = this;
return this.singleLineString.call(this, (function () {
return this.handleStringPattern("'");
}));
}), (function () {
var __combe_this = this;
return this.singleLineString.call(this, (function () {
return this.handleStringPattern("\"");
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "singleLineString", (function (delimiter) {
var self = this;
var cs;
return (function () {
delimiter.call(this);
(function () {
return (cs = (function () {
return this.__combe_repeat((function () {
(function () {
return this.__combe_not(delimiter);
}).call(this);
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.stringChar.call(this);
}));
}).call(this));
}).call(this);
delimiter.call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, "string", cs.join(""));
}).call(this);
}).call(this);
}));
__combe_defineValueProperty(__combe_object, "stringChar", (function () {
return this.__combe_memoize("m4w+bWNoOMkryp3OFsLlkw", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
return this.stringEscapeSequence.call(this);
}), (function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("\\");
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "stringEscapeSequence", (function () {
return this.__combe_memoize("EslUiStwg9AGjXwyS7qKQQ", (function () {
var self = this;
var hs;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("'");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "'";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
return this.handleStringPattern("\"");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\"";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\\";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("b");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\b";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("f");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\f";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("n");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\n";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("r");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\r";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("t");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\t";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("v");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\u000b";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("0");
}).call(this);
return (function () {
return this.__combe_not(this.digit);
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\u0000";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("x");
}).call(this);
return (function () {
return (hs = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
this.hexDigit.call(this);
return this.hexDigit.call(this);
}));
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return String.fromCodepoint(hs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("u");
}).call(this);
return (function () {
return (hs = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
this.hexDigit.call(this);
this.hexDigit.call(this);
this.hexDigit.call(this);
return this.hexDigit.call(this);
}));
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return String.fromCodepoint(hs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regex", (function () {
return this.__combe_memoize("vWYRSy9lxcVIvoI9kEkq3g", (function () {
var self = this;
var pattern, options;
return (function () {
(function () {
return this.handleStringPattern("r/");
}).call(this);
(function () {
return (pattern = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("*");
}));
}).call(this);
return (function () {
return this.__combe_repeat(this.regexChar);
}).call(this);
}));
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern("/");
}).call(this);
(function () {
return (options = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
return this.__combe_repeat(this.idChar);
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
return this.emit.call(this, "regex", Regex.new(pattern, options));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regexChar", (function () {
return this.__combe_memoize("mAmrg5RK+68eqvl8MV2adQ", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}), this.regexCharacterClass);
}), (function () {
(function () {
return this.__combe_not((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("/");
}), this.newline);
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regexCharacterClass", (function () {
return this.__combe_memoize("K7EjQ/EWquKcCod0QRZbuw", (function () {
var self = this;
return (function () {
(function () {
return this.handleStringPattern("[");
}).call(this);
this.regexCharacterClassChar.call(this);
return (function () {
return this.handleStringPattern("]");
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regexCharacterClassChar", (function () {
return this.__combe_memoize("U3Bm7bK+Mg99XvrSrXPI+w", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}), (function () {
(function () {
return this.__combe_not((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("]");
}), this.newline);
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "initialIdChar", (function () {
return this.__combe_memoize("AoL+LO7bp1QW+/c4SYpvgw", (function () {
var self = this;
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("a", "z"), Range.inclusive("A", "Z"), "_", "$");
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "idChar", (function () {
return this.__combe_memoize("hPdX/PinsG0XPDpRQlJisw", (function () {
var self = this;
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("a", "z"), Range.inclusive("A", "Z"), "_", "$", Range.inclusive("0", "9"));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "digit", (function () {
return this.__combe_memoize("UdDvu3wKyRygW34Eeg8slA", (function () {
var self = this;
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("0", "9"));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "hexDigit", (function () {
return this.__combe_memoize("vvMS9tTphF7xl5kB7hY7nA", (function () {
var self = this;
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("0", "9"), Range.inclusive("a", "f"), Range.inclusive("A", "F"));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ws", (function () {
return this.__combe_memoize("5Ce69a240xn33VJXDzdxmw", (function () {
var self = this;
return (function () {
return this.__combe_nonZeroRepeat((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.spaces, this.comment);
}), (function () {
this.newline.call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (self.emitNewline = true);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "spaces", (function () {
return this.__combe_memoize("BrSOGh+H7htq7Vb9IxWH5g", (function () {
var self = this;
return (function () {
var __combe_this = this;
return this.char.call(this, " ");
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "newline", (function () {
return this.__combe_memoize("CkNkDJKFbUjhgDhDJ/m20A", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
return this.handleStringPattern("\r\n");
}), (function () {
var __combe_this = this;
return this.char.call(this, "\n\r");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "comment", (function () {
return this.__combe_memoize("XY7iiaMpIpcMD1X6ZkGxmg", (function () {
var self = this;
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("//");
}).call(this);
(function () {
return this.__combe_repeat((function () {
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}));
}).call(this);
return (function () {
return this.__combe_choice((function () {
return this.__combe_lookahead(this.newline);
}), this.eof);
}).call(this);
}), (function () {
(function () {
return this.handleStringPattern("/*");
}).call(this);
(function () {
return this.__combe_repeat((function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("*/");
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
return (function () {
return this.handleStringPattern("*/");
}).call(this);
}));
}).call(this);
}));
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();