// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var CombeLexer = (module["exports"] = TextGrammar.subclass((function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "allTokens", (function (source, filename) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
var lexer = __combe_this.new(source, filename);
var tokens = [];
(function () {
while ((tokens.isEmpty() || (!tokens["last"].is("eof")))) {
try {
(function () {
tokens.push(lexer.nextToken());
})()}
catch (__combe_e) {
if (__combe_e === __combe_break) break;
if (__combe_e === __combe_continue) continue;
throw __combe_e;
}
}
})();
(function () { throw (__combe_return = { value: tokens }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "createToken", (function (type, value) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
var text = __combe_this.slice(__combe_this["tokenPosition"], __combe_this["position"]);
(function () { throw (__combe_return = { value: (__combe_this["lastToken"] = Token.new(type, value, __combe_this["tokenPosition"], text["length"], text)) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "nextToken", (function () {
return this.__combe_memoize("W/V5ryVKPGK2GaCH1+eJBQ", (function () {
return (function () {
(function () {
var __combe_this = this;
var __combe_return = null;
try {
return ((__combe_this["furthestPosition"] = __combe_this["position"]), (__combe_this["emitNewline"] = false), (__combe_this["tokenPosition"] = __combe_this["position"]));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
(function () {
return this.__combe_optional(this.ws);
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_this["emitNewline"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
(function () {
return this.__combe_not(this.eof);
}).call(this);
(function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_infixOperators["!="](__combe_this["tokenPosition"], 0);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
return this.newlineToken.call(this);
}), (function () {
(function () {
var __combe_this = this;
var __combe_return = null;
try {
return (__combe_this["tokenPosition"] = __combe_this["position"]);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.identifier, this.number);
}), this.operatorAssignment);
}), this.punctuation);
}), this.string);
}), this.regex);
}), (function () {
this.eof.call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, "eof");
}).call(this);
}));
}), (function () {
var __combe_this = this;
return this.error.call(this, ("Lexer failed at position " + __combe_this.positionString()));
}));
}).call(this);
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "identifier", (function () {
return this.__combe_memoize("aSt9MAqNRw4Xy9gQRStSlw", (function () {
var token;
return (function () {
(function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("r/");
}));
}).call(this);
this.initialIdChar.call(this);
(function () {
return this.__combe_repeat(this.idChar);
}).call(this);
(function () {
return (token = (function () {
var __combe_this = this;
return this.createToken.call(this, "identifier");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (token["reserved"] = __combe_this["ReservedWords"].include(token["text"]));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return token;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ReservedWords", ["var", "function", "rule", "if", "else", "while", "do", "for", "return", "break", "continue", "try", "catch", "finally", "this", "null", "undefined", "true", "false"]);
__combe_defineValueProperty(__combe_object, "operatorAssignment", (function () {
return this.__combe_memoize("zSSFfkgfnA4/huJ1S2F1nQ", (function () {
return (function () {
(function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("+=");
}), (function () {
return this.handleStringPattern("-=");
}));
}), (function () {
return this.handleStringPattern("*=");
}));
}), (function () {
return this.handleStringPattern("/=");
}));
}), (function () {
return this.handleStringPattern("%=");
}));
}), (function () {
return this.handleStringPattern("&=");
}));
}), (function () {
return this.handleStringPattern("|=");
}));
}), (function () {
return this.handleStringPattern("^=");
}));
}), (function () {
return this.handleStringPattern("<<=");
}));
}), (function () {
return this.handleStringPattern(">>>=");
}));
}), (function () {
return this.handleStringPattern(">>=");
}));
}).call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, "operatorAssignment");
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "punctuation", (function () {
return this.__combe_memoize("57QOdqmXirVBFZ90kUDVwQ", (function () {
var text;
return (function () {
(function () {
return (text = (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("{");
}), (function () {
return this.handleStringPattern("}");
}));
}), (function () {
return this.handleStringPattern("(");
}));
}), (function () {
return this.handleStringPattern(")");
}));
}), (function () {
return this.handleStringPattern("[");
}));
}), (function () {
return this.handleStringPattern("]");
}));
}), (function () {
return this.handleStringPattern(";");
}));
}), (function () {
return this.handleStringPattern(",");
}));
}), (function () {
return this.handleStringPattern("<<");
}));
}), (function () {
return this.handleStringPattern(">>>");
}));
}), (function () {
return this.handleStringPattern(">>");
}));
}), (function () {
return this.handleStringPattern("<=");
}));
}), (function () {
return this.handleStringPattern(">=");
}));
}), (function () {
return this.handleStringPattern("<");
}));
}), (function () {
return this.handleStringPattern(">");
}));
}), (function () {
return this.handleStringPattern("===");
}));
}), (function () {
return this.handleStringPattern("!==");
}));
}), (function () {
return this.handleStringPattern("==");
}));
}), (function () {
return this.handleStringPattern("!=");
}));
}), (function () {
return this.handleStringPattern("!");
}));
}), (function () {
return this.handleStringPattern("=");
}));
}), (function () {
return this.handleStringPattern("...");
}));
}), (function () {
return this.handleStringPattern("..");
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
return (function () {
return this.__combe_not(this.digit);
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return ".";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
return this.handleStringPattern("->");
}));
}), (function () {
return this.handleStringPattern("#");
}));
}), (function () {
return this.handleStringPattern("&&");
}));
}), (function () {
return this.handleStringPattern("||");
}));
}), (function () {
return this.handleStringPattern("^^");
}));
}), (function () {
return this.handleStringPattern("&");
}));
}), (function () {
return this.handleStringPattern("|");
}));
}), (function () {
return this.handleStringPattern("^");
}));
}), (function () {
return this.handleStringPattern("++");
}));
}), (function () {
return this.handleStringPattern("--");
}));
}), (function () {
return this.handleStringPattern("+");
}));
}), (function () {
return this.handleStringPattern("-");
}));
}), (function () {
return this.handleStringPattern("*");
}));
}), (function () {
return this.handleStringPattern("/");
}));
}), (function () {
return this.handleStringPattern("%");
}));
}), (function () {
return this.handleStringPattern("~");
}));
}), (function () {
return this.handleStringPattern("?");
}));
}), (function () {
return this.handleStringPattern(":");
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, text);
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "number", (function () {
return this.__combe_memoize("jhnFgV+dpySiL4kOrGSQXA", (function () {
return (function () {
return this.__combe_choice(this.decimal, this.hexInteger);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "decimal", (function () {
return this.__combe_memoize("q2BCU8RQq8dvff900sy/0g", (function () {
var text;
return (function () {
(function () {
return (text = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
return this.__combe_choice((function () {
this.integerPart.call(this);
(function () {
return this.__combe_optional((function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
return (function () {
return this.__combe_repeat(this.digit);
}).call(this);
}));
}).call(this);
return (function () {
return this.__combe_optional(this.exponentPart);
}).call(this);
}), (function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
(function () {
return this.__combe_nonZeroRepeat(this.digit);
}).call(this);
return (function () {
return this.__combe_optional(this.exponentPart);
}).call(this);
}));
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_not(this.idChar);
}).call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, "number", parseFloat(text));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "integerPart", (function () {
return this.__combe_memoize("UcfoiqEWKq4Ha+sNm2QNTA", (function () {
return (function () {
return this.__combe_choice((function () {
return this.handleStringPattern("0");
}), (function () {
(function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("1", "9"));
}).call(this);
return (function () {
return this.__combe_repeat(this.digit);
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "exponentPart", (function () {
return this.__combe_memoize("yiyroAHDqANNcY5T/cK00A", (function () {
return (function () {
(function () {
return this.__combe_choice((function () {
return this.handleStringPattern("e");
}), (function () {
return this.handleStringPattern("E");
}));
}).call(this);
(function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("+");
}), (function () {
return this.handleStringPattern("-");
}));
}), this.nothing);
}).call(this);
return (function () {
return this.__combe_nonZeroRepeat(this.digit);
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "hexInteger", (function () {
return this.__combe_memoize("mVvBBmTu+QTAReznm1GEiA", (function () {
var text;
return (function () {
(function () {
return this.__combe_choice((function () {
return this.handleStringPattern("0x");
}), (function () {
return this.handleStringPattern("0X");
}));
}).call(this);
(function () {
return (text = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
return this.__combe_nonZeroRepeat(this.hexDigit);
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_not(this.idChar);
}).call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, "number", parseInt(text, 16));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "string", (function () {
return this.__combe_memoize("fHXRlIF9m+HKZTAbk/pLIg", (function () {
var text;
return (function () {
(function () {
return (text = (function () {
return this.__combe_choice((function () {
var __combe_this = this;
return this.stringFragment.call(this, (function () {
return this.handleStringPattern("'");
}));
}), (function () {
var __combe_this = this;
return this.stringFragment.call(this, (function () {
return this.handleStringPattern("\"");
}));
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, "string", text);
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "stringFragment", (function (delimiter) {
var cs;
return (function () {
(function () {
delimiter.call(this);
(function () {
return (cs = (function () {
return this.__combe_repeat((function () {
(function () {
return this.__combe_not(delimiter);
}).call(this);
return this.stringChar.call(this);
}));
}).call(this));
}).call(this);
return delimiter.call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return cs.join("");
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
__combe_defineValueProperty(__combe_object, "stringChar", (function () {
return this.__combe_memoize("UqfEd7oIcVw707KMSeuqzg", (function () {
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
return this.stringEscapeSequence.call(this);
}), (function () {
(function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
return this.newline.call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "stringEscapeSequence", (function () {
return this.__combe_memoize("UX7EewA0p3WDRUNU1Uv7Rg", (function () {
var hs;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("'");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "'";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
return this.handleStringPattern("\"");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\"";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\\";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("b");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\b";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("f");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\f";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("n");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\n";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("r");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\r";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("t");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\t";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.handleStringPattern("v");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\u000b";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("0");
}).call(this);
return (function () {
return this.__combe_not(this.digit);
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return "\u0000";
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("x");
}).call(this);
return (function () {
return (hs = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
this.hexDigit.call(this);
return this.hexDigit.call(this);
}));
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return String.fromCodepoint(hs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("u");
}).call(this);
return (function () {
return (hs = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
this.hexDigit.call(this);
this.hexDigit.call(this);
this.hexDigit.call(this);
return this.hexDigit.call(this);
}));
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return String.fromCodepoint(hs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regex", (function () {
return this.__combe_memoize("iyZKVpwxm4xSWIDwl1AAwQ", (function () {
var pattern, options;
return (function () {
(function () {
return this.handleStringPattern("r/");
}).call(this);
(function () {
return (pattern = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("*");
}));
}).call(this);
return (function () {
return this.__combe_repeat(this.regexChar);
}).call(this);
}));
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern("/");
}).call(this);
(function () {
return (options = (function () {
var __combe_this = this;
return this.matchedInput.call(this, (function () {
return this.__combe_repeat(this.idChar);
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
return this.createToken.call(this, "regex", Regex.new(pattern, options));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regexChar", (function () {
return this.__combe_memoize("tT/2CLo/raplnpoP4BLs2Q", (function () {
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}), this.regexCharacterClass);
}), (function () {
(function () {
return this.__combe_not((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("/");
}), this.newline);
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regexCharacterClass", (function () {
return this.__combe_memoize("VeKwZrApgO7HIATNTmCb5Q", (function () {
return (function () {
(function () {
return this.handleStringPattern("[");
}).call(this);
this.regexCharacterClassChar.call(this);
return (function () {
return this.handleStringPattern("]");
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "regexCharacterClassChar", (function () {
return this.__combe_memoize("qskw1+n0U4ejTsyLW0O7lQ", (function () {
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("\\");
}).call(this);
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}), (function () {
(function () {
return this.__combe_not((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("]");
}), this.newline);
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "newlineToken", (function () {
return this.__combe_memoize("fxZXSIMkZvO0N/ll554AcQ", (function () {
return (function () {
var __combe_this = this;
return this.createToken.call(this, "newline", (__combe_this.lineColumn().subscript(1) - 1));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "initialIdChar", (function () {
return this.__combe_memoize("jxUlGEkd4+2IsNM0WdJDuA", (function () {
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("a", "z"), Range.inclusive("A", "Z"), "_", "$");
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "idChar", (function () {
return this.__combe_memoize("iozI5kr7gNkH7DVUR5Kg0Q", (function () {
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("a", "z"), Range.inclusive("A", "Z"), "_", "$", Range.inclusive("0", "9"));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "digit", (function () {
return this.__combe_memoize("cA8CQdiK58/85OlD7GeIag", (function () {
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("0", "9"));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "hexDigit", (function () {
return this.__combe_memoize("SMBCPMeVn5ctR5ffwRcKRA", (function () {
return (function () {
var __combe_this = this;
return this.char.call(this, Range.inclusive("0", "9"), Range.inclusive("a", "f"), Range.inclusive("A", "F"));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ws", (function () {
return this.__combe_memoize("onObZwHLBV9bZndemX/mbw", (function () {
return (function () {
return this.__combe_nonZeroRepeat((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.spaces, this.comment);
}), (function () {
this.newline.call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (__combe_this["emitNewline"] = true);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "spaces", (function () {
return this.__combe_memoize("UnNnQyq2TwfG5eIp6bt8jQ", (function () {
return (function () {
var __combe_this = this;
return this.char.call(this, " ");
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "newline", (function () {
return this.__combe_memoize("wdltB7H2eYgzZb2frBrxLQ", (function () {
return (function () {
return this.__combe_choice((function () {
return this.handleStringPattern("\r\n");
}), (function () {
var __combe_this = this;
return this.char.call(this, "\n\r");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "comment", (function () {
return this.__combe_memoize("qgWipmu5dlK8i2UUE9CclQ", (function () {
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("//");
}).call(this);
(function () {
return this.__combe_repeat((function () {
(function () {
return this.__combe_not(this.newline);
}).call(this);
return this.char.call(this);
}));
}).call(this);
return (function () {
return this.__combe_choice((function () {
return this.__combe_lookahead(this.newline);
}), this.eof);
}).call(this);
}), (function () {
(function () {
return this.handleStringPattern("/*");
}).call(this);
(function () {
return this.__combe_repeat((function () {
(function () {
return this.__combe_not((function () {
return this.handleStringPattern("*/");
}));
}).call(this);
return this.char.call(this);
}));
}).call(this);
return (function () {
return this.handleStringPattern("*/");
}).call(this);
}));
}).call(this);
}));
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();