// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var CombeAst = (module.exports = Ast.subclass((function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "types", (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "Script", ["statements"]);
__combe_defineValueProperty(__combe_object, "VarStatement", ["declarations"]);
__combe_defineValueProperty(__combe_object, "If", ["condition", "consiquent", "alternative"]);
__combe_defineValueProperty(__combe_object, "While", ["condition", "body"]);
__combe_defineValueProperty(__combe_object, "DoWhile", ["body", "condition"]);
__combe_defineValueProperty(__combe_object, "For", ["initialize", "condition", "increment", "body"]);
__combe_defineValueProperty(__combe_object, "ForDeclaring", ["declarations", "condition", "increment", "body"]);
__combe_defineValueProperty(__combe_object, "Do", ["body"]);
__combe_defineValueProperty(__combe_object, "TryCatch", ["tryBody", "catchVariable", "catchBody", "finallyBody"]);
__combe_defineValueProperty(__combe_object, "Throw", ["argument"]);
__combe_defineValueProperty(__combe_object, "Return", ["argument"]);
__combe_defineValueProperty(__combe_object, "Break", []);
__combe_defineValueProperty(__combe_object, "Continue", []);
__combe_defineValueProperty(__combe_object, "Sequence", ["expressions"]);
__combe_defineValueProperty(__combe_object, "Assignment", ["lhs", "rhs"]);
__combe_defineValueProperty(__combe_object, "OperatorAssignment", ["name", "lhs", "rhs"]);
__combe_defineValueProperty(__combe_object, "PrefixOperator", ["name", "argument"]);
__combe_defineValueProperty(__combe_object, "PostfixOperator", ["name", "argument"]);
__combe_defineValueProperty(__combe_object, "InfixOperator", ["name", "lhs", "rhs"]);
__combe_defineValueProperty(__combe_object, "Call", ["function", "arguments"]);
__combe_defineValueProperty(__combe_object, "Subscript", ["subject", "arguments"]);
__combe_defineValueProperty(__combe_object, "MethodCall", ["subject", "name", "arguments"]);
__combe_defineValueProperty(__combe_object, "Dot", ["subject", "name"]);
__combe_defineValueProperty(__combe_object, "InclusiveRange", ["lhs", "rhs"]);
__combe_defineValueProperty(__combe_object, "ExclusiveRange", ["lhs", "rhs"]);
__combe_defineValueProperty(__combe_object, "This", []);
__combe_defineValueProperty(__combe_object, "Variable", ["name"]);
__combe_defineValueProperty(__combe_object, "Literal", ["value"]);
__combe_defineValueProperty(__combe_object, "InterpolatedString", ["expressions"]);
__combe_defineValueProperty(__combe_object, "Array", ["arguments"]);
__combe_defineValueProperty(__combe_object, "Object", ["properties"]);
__combe_defineValueProperty(__combe_object, "Function", ["parameters", "body"]);
__combe_defineValueProperty(__combe_object, "Method", ["parameters", "body"]);
__combe_defineValueProperty(__combe_object, "Rule", ["parameters", "body"]);
__combe_defineValueProperty(__combe_object, "VariableDeclaration", ["name", "expression"]);
__combe_defineValueProperty(__combe_object, "Block", ["statements"]);
__combe_defineValueProperty(__combe_object, "SplatArgument", ["argument"]);
__combe_defineValueProperty(__combe_object, "Parameter", ["name"]);
__combe_defineValueProperty(__combe_object, "SplatParameter", ["name"]);
__combe_defineValueProperty(__combe_object, "ValueProperty", ["name", "value"]);
__combe_defineValueProperty(__combe_object, "GetProperty", ["name", "value"]);
__combe_defineValueProperty(__combe_object, "SetProperty", ["name", "value"]);
__combe_defineValueProperty(__combe_object, "DescribeProperty", ["name", "value"]);
__combe_defineValueProperty(__combe_object, "ChoicePattern", ["patterns"]);
__combe_defineValueProperty(__combe_object, "SequencePattern", ["patterns"]);
__combe_defineValueProperty(__combe_object, "NotPattern", ["pattern"]);
__combe_defineValueProperty(__combe_object, "LookaheadPattern", ["pattern"]);
__combe_defineValueProperty(__combe_object, "HashOperatorPattern", ["pattern"]);
__combe_defineValueProperty(__combe_object, "RepeatPattern", ["pattern"]);
__combe_defineValueProperty(__combe_object, "NonZeroRepeatPattern", ["pattern"]);
__combe_defineValueProperty(__combe_object, "OptionalPattern", ["pattern"]);
__combe_defineValueProperty(__combe_object, "BindPattern", ["pattern", "name"]);
__combe_defineValueProperty(__combe_object, "CallPattern", ["pattern", "arguments"]);
__combe_defineValueProperty(__combe_object, "PredicatePattern", ["body"]);
__combe_defineValueProperty(__combe_object, "ActionPattern", ["body"]);
__combe_defineValueProperty(__combe_object, "ImmediateActionPattern", ["body"]);
__combe_defineValueProperty(__combe_object, "StringPattern", ["argument"]);
__combe_defineValueProperty(__combe_object, "VariablePattern", ["name"]);
return __combe_object;
})());
return __combe_object;
})(), (function () {
var __combe_object = {};
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();