// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var crypto = require("crypto");
var Ast = require("./CombeAst");
var AnalyseScoping = require("./AnalyseScoping");
var CombeAstToJS = (module["exports"] = Object.subclass((function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "translate", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: Array.deepJoinIOList(__combe_this.translateToIOList(ast)) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "translateToIOList", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
AnalyseScoping.analyse(ast);
ast.visit(__combe_this.new());
(function () { throw (__combe_return = { value: ast["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "visitUnspecified", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw Error.new(("Unrecognized Ast node " + ast)); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitScript", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var stmts = ast["statements"].map((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [stmt["code"], ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(ast["code"] = ["// Generated by Combe compiler\n", "\"use strict\";\n", "if (!__combe_runtimeLoaded) throw new Error(\"Combe runtime not loaded\");\n", "(function () {\n", "var __combe_this = null;\n", "var __combe_return = null;\n", "try {\n", stmts, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})();"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitVarStatement", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var decls = ast["declarations"].map((function (decl) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: decl["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = ["var ", decls]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitIf", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var alt = (/* if */ __combe_infixOperators["!="](ast["alternative"], null)
? /* then */ ast["alternative"]["code"]
: /* else */ "null");
(ast["code"] = ["(/* if */ ", ast["condition"]["code"], "\n", "? /* then */ ", ast["consiquent"]["code"], "\n", ": /* else */ ", alt, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitWhile", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var body = __combe_this.unwrapBlockAsStatements(ast["body"]);
(ast["code"] = ["(function () {\n", "while (", ast["condition"]["code"], ") {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "}\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitDoWhile", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var body = __combe_this.unwrapBlockAsStatements(ast["body"]);
(ast["code"] = ["(function () {\n", "do {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "} while (", ast["condition"]["code"], ");\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitFor", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var init = (/* if */ __combe_infixOperators["!="](ast["initialize"], null)
? /* then */ ast["initialize"]["code"]
: /* else */ null);
var cond = (/* if */ __combe_infixOperators["!="](ast["condition"], null)
? /* then */ ast["condition"]["code"]
: /* else */ null);
var inc = (/* if */ __combe_infixOperators["!="](ast["increment"], null)
? /* then */ ast["increment"]["code"]
: /* else */ null);
var body = __combe_this.unwrapBlockAsStatements(ast["body"]);
(ast["code"] = ["(function () {\n", "for (", init, "; ", cond, "; ", inc, ") {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "}\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitForDeclaring", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var decls = ["var ", ast["declarations"].map((function (decl) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: decl["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ")];
var names = [];
var inits = [];
(function (i) {
while ((i < ast["declarations"]["length"])) {
try {
var decl = ast["declarations"].subscript(i);
names.push(decl["name"]);
inits.push(decl["expression"]["code"]);
}
catch (__combe_e) {
if (__combe_e === __combe_break) break;
if (__combe_e !== __combe_continue) throw __combe_e;
}
(i++);
}
})(0);
names.separatedBy(", ");
inits.separatedBy(", ");
var cond = (/* if */ __combe_infixOperators["!="](ast["condition"], null)
? /* then */ ast["condition"]["code"]
: /* else */ null);
var inc = (/* if */ __combe_infixOperators["!="](ast["increment"], null)
? /* then */ ast["increment"]["code"]
: /* else */ null);
var body = __combe_this.unwrapBlockAsStatements(ast["body"], true);
(ast["code"] = ["(function (", names, ") {\n", "while (", cond, ") {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e !== __combe_continue) throw __combe_e;\n", "}\n", inc, ";\n", "}\n", "})(", inits, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitDo", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var body = __combe_this.unwrapBlockAsStatements(ast["body"]);
(ast["code"] = ["(function () {\n", "/* do */ {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "}\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitTryCatch", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var tryFragment = ["try {\n", ast["tryBody"]["code"], ";\n", "}\n"];
var catchFragment = null;
(/* if */ __combe_infixOperators["!="](ast["catchBody"], null)
? /* then */ (function () {
(catchFragment = ["catch (", ast["catchVariable"], ") {\n", ast["catchBody"]["code"], ";\n", "}\n"]);
})()
: /* else */ null);
var finallyBody = null;
(/* if */ __combe_infixOperators["!="](ast["finallyBody"], null)
? /* then */ (function () {
(finallyBody = ["finally {\n", ast["finallyBody"]["code"], ";\n", "}\n"]);
})()
: /* else */ null);
(ast["code"] = ["(function () {\n", tryFragment, catchFragment, finallyBody, "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitThrow", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () { throw ", ast["argument"]["code"], "; })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitReturn", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var valueCode = (/* if */ __combe_infixOperators["!="](ast["argument"], null)
? /* then */ ast["argument"]["code"]
: /* else */ "undefined");
(ast["code"] = ["(function () { throw (__combe_return = { value: ", valueCode, " }); })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitBreak", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(ast["code"] = ["(function () { throw __combe_break; })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitContinue", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(ast["code"] = ["(function () { throw __combe_continue; })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitSequence", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var exprs = ast["expressions"].map((function (expr) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: expr["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(/* if */ exprs.isEmpty()
? /* then */ (function () {
(exprs = "null");
})()
: /* else */ null);
(ast["code"] = ["(", exprs, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitAssignment", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(", ast["lhs"]["code"], " = ", ast["rhs"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitOperatorAssignment", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(", ast["lhs"]["code"], " ", ast["name"], " ", ast["rhs"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitPrefixOperator", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(", ast["name"], ast["argument"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitPostfixOperator", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(", ast["argument"]["code"], ast["name"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitInfixOperator", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(/* if */ ["==", "!="].include(ast["name"])
? /* then */ (function () {
(ast["code"] = ["__combe_infixOperators[", ast["name"].quote(), "](", ast["lhs"]["code"], ", ", ast["rhs"]["code"], ")"]);
})()
: /* else */ (function () {
(ast["code"] = ["(", ast["lhs"]["code"], " ", ast["name"], " ", ast["rhs"]["code"], ")"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitCall", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var args = ast["arguments"].map((function (arg) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: arg["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = [ast["function"]["code"], "(", args, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitSubscript", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var args = ast["arguments"].map((function (arg) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: arg["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = [ast["subject"]["code"], ".subscript(", args, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitMethodCall", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var args = ast["arguments"].map((function (arg) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: arg["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = [ast["subject"]["code"], ".", ast["name"], "(", args, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitDot", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = [ast["subject"]["code"], "[", ast["name"].quote(), "]"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitInclusiveRange", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["Range.inclusive(", ast["lhs"]["code"], ", ", ast["rhs"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitExclusiveRange", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["Range.exclusive(", ast["lhs"]["code"], ", ", ast["rhs"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitThis", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(ast["code"] = "__combe_this");
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitVariable", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(ast["code"] = ast["name"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitLiteral", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(/* if */ (ast["value"] === null)
? /* then */ (function () {
(ast["code"] = "null");
})()
: /* else */ (/* if */ (ast["value"] === undefined)
? /* then */ (function () {
(ast["code"] = "undefined");
})()
: /* else */ (/* if */ __combe_infixOperators["=="](ast["value"], true)
? /* then */ (function () {
(ast["code"] = "true");
})()
: /* else */ (/* if */ __combe_infixOperators["=="](ast["value"], false)
? /* then */ (function () {
(ast["code"] = "false");
})()
: /* else */ (/* if */ String.isClassOf(ast["value"])
? /* then */ (function () {
(ast["code"] = ast["value"].quote());
})()
: /* else */ (/* if */ Number.isClassOf(ast["value"])
? /* then */ (function () {
(ast["code"] = ast["value"].toString());
})()
: /* else */ (/* if */ Regex.isClassOf(ast["value"])
? /* then */ (function () {
(ast["code"] = ast["value"].toString());
})()
: /* else */ (function () {
(function () { throw Error.new("Unknown Ast (Literal) value type"); })();
})())))))));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitArray", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var elems = ast["elements"].map((function (elem) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: elem["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = ["[", elems, "]"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitObject", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var prologue = ["var __combe_object = {};\n"];
var decls = ast["properties"].map((function (pdecl) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [pdecl["code"], ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
var epilogue = ["return __combe_object;\n"];
(ast["code"] = ["(function () {\n", prologue, decls, epilogue, "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitFunction", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var params = null, argsvar = null;
(/* if */ __combe_infixOperators["!="](ast["parameters"], null)
? /* then */ (function () {
(/* if */ String.isClassOf(ast["parameters"])
? /* then */ (function () {
(argsvar = ["var ", ast["parameters"], " = Array.slice(arguments);\n"]);
})()
: /* else */ (function () {
(params = ast["parameters"].separatedBy(", "));
})());
})()
: /* else */ null);
(ast["code"] = ["(function (", params, ") {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", argsvar, "try {\n", "return ", ast["body"]["code"], ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitRule", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var vars;
(/* if */ (ast["declareVariables"]["length"] >= 1)
? /* then */ (function () {
(vars = ["var ", ast["declareVariables"].separatedBy(", "), ";\n"]);
})()
: /* else */ (function () {
(vars = null);
})());
(/* if */ __combe_infixOperators["=="](ast["parameters"], null)
? /* then */ (function () {
var innerFunction = ["(function () {\n", vars, "return ", ast["body"]["code"], ".call(this);\n", "})"];
var innerFunctionCode = Array.deepJoinIOList(innerFunction);
var hash = crypto.createHash("md5");
hash.update(innerFunctionCode);
var digest = hash.digest("base64").slice(0, (-2));
(ast["code"] = ["(function () {\n", "return this.__combe_memoize(", digest.quote(), ", ", innerFunction, ");\n", "})"]);
})()
: /* else */ (function () {
var params = null, argsvar = null;
(/* if */ String.isClassOf(ast["parameters"])
? /* then */ (function () {
(argsvar = ["var ", ast["parameters"], " = Array.slice(arguments);\n"]);
})()
: /* else */ (function () {
(params = ast["parameters"].separatedBy(", "));
})());
(ast["code"] = ["(function (", params, ") {\n", argsvar, vars, "return ", ast["body"]["code"], ".call(this);\n", "})"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitVariableDeclaration", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(/* if */ __combe_infixOperators["!="](ast["expression"], null)
? /* then */ (function () {
(ast["code"] = [ast["name"], " = ", ast["expression"]["code"]]);
})()
: /* else */ (function () {
(ast["code"] = ast["name"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitBlock", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var stmts = ast["statements"].map((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [stmt["code"], ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(ast["code"] = ["(function () {\n", stmts, "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitValueProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["__combe_defineValueProperty(", "__combe_object, ", ast["name"].quote(), ", ", ast["value"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitGetProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["__combe_defineGetProperty(", "__combe_object, ", ast["name"].quote(), ", ", ast["value"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitSetProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["__combe.defineSetProperty(", "__combe_object, ", ast["name"].quote(), ", ", ast["value"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitDescribeProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["__combe.defineDescribedProperty(", "__combe_object, ", ast["name"].quote(), ", ", ast["value"]["code"], ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitChoicePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var ps = ast["patterns"].map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: p["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = ["(function () {\n", "return this.__combe_choice(", ps, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitSequencePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var ps = ast["patterns"].slice(0, (ast["patterns"]["length"] - 1)).map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [p["code"], ".call(this);\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
ps.push(["return ", ast["patterns"]["last"]["code"], ".call(this);\n"]);
(ast["code"] = ["(function () {\n", ps, "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitNotPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return this.__combe_not(", ast["pattern"]["code"], ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitLookaheadPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return this.__combe_lookahead(", ast["pattern"]["code"], ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitHashOperatorPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return this.handleHashPattern(", ast["pattern"]["code"], ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitRepeatPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return this.__combe_repeat(", ast["pattern"]["code"], ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitNonZeroRepeatPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return this.__combe_nonZeroRepeat(", ast["pattern"]["code"], ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitOptionalPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return this.__combe_optional(", ast["pattern"]["code"], ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitBindPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "return (", ast["name"], " = ", ast["pattern"]["code"], ".call(this));\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitCallPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var as = ast["arguments"].map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: a["code"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast["code"] = ["(function () {\n", "var __combe_this = this;\n", "return ", ast["pattern"]["code"], ".call(this, ", as, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitPredicatePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var pattern = ["(function () {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "try {\n", "return ", ast["body"]["code"], ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"];
(ast["code"] = ["(function () {\n", "return this.__combe_predicate(", pattern, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitActionPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
(ast["code"] = ["(function () {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "try {\n", "return ", ast["body"]["code"], ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitImmediateActionPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
ast.visitChildren(__combe_this);
var pattern = ["(function () {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "try {\n", "return ", ast["body"]["code"], ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"];
(ast["code"] = [pattern, ".call(this)"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitStringPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(ast["code"] = ["(function () {\n", "return this.handleStringPattern(", ast["value"].quote(), ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitVariablePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(/* if */ ast["containingScope"]["variables"].include(ast["name"])
? /* then */ (function () {
(ast["code"] = [ast["name"]]);
})()
: /* else */ (function () {
(ast["code"] = ["this.", ast["name"]]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "unwrapBlockAsStatements", (function (ast, ignoreDefAndVarTest) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](ignoreDefAndVarTest, null)
? /* then */ (ignoreDefAndVarTest = false)
: /* else */ null);
(/* if */ __combe_infixOperators["=="](ast, null)
? /* then */ (function () {
(function () { throw (__combe_return = { value: null }); })();
})()
: /* else */ (/* if */ (ast["type"] === "Block")
? /* then */ (function () {
var stmts = ast["statements"].map((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [stmt["code"], ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(/* if */ (ast["statements"].some((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: ["VarStatement"].include(stmt["type"]) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})) || ignoreDefAndVarTest)
? /* then */ (function () {
(function () { throw (__combe_return = { value: stmts }); })();
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: ["(function () {\n", stmts, "})()"] }); })();
})());
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: [ast["code"], ";\n"] }); })();
})()));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "gensymIndex", 0);
__combe_defineValueProperty(__combe_object, "gensym", (function (name) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](name, null)
? /* then */ (name = "__unnamed")
: /* else */ null);
(function () { throw (__combe_return = { value: (("__combe_gensym_" + name) + (__combe_this["gensymIndex"]++)) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();