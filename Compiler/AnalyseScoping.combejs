// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var AstVisitor = require("./AstVisitor");
var AnalyseScoping = (module.exports = AstVisitor.subclass((function () {
var __combe_object = {};
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "initialize", (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(__combe_this.scopes = []);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "defaultVisitOrder", "NoOrder");
__combe_defineValueProperty(__combe_object, "Script", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_this.visitCreatingScope(ast);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "Block", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_this.visitCreatingScope(ast);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "Rule", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_this.visitCreatingScope(ast);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitCreatingScope", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
__combe_this.scopes.push(ast);
(ast.variables = []);
(ast.declareVariables = []);
(/* if */ __combe_infixOperators["!="](ast.parameters, null)
? /* then */ (function () {
ast.variables.pushAll(ast.parameters.map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.name;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})));
})()
: /* else */ null);
__combe_this.visitChildren(ast);
ast.variables.pushAll(ast.declareVariables);
__combe_this.scopes.pop();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "VariableDeclaration", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
assert(((__combe_this.scopes.top.type === "Block") || (__combe_this.scopes.top.type === "Script")));
(function () { throw (__combe_return = { value: __combe_this.visitDeclaringVariable(ast) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "BindPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
assert((__combe_this.scopes.top.type === "Rule"));
(function () { throw (__combe_return = { value: __combe_this.visitDeclaringVariable(ast) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "visitDeclaringVariable", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(/* if */ (!__combe_this.scopes.last.variables.include(ast.name))
? /* then */ (function () {
__combe_this.scopes.last.declareVariables.pushIfAbsent(ast.name);
})()
: /* else */ null);
__combe_this.visitChildren(ast);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "Variable", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "VariablePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
assert((__combe_this.scopes.top.type === "Rule"));
(ast.containingScope = __combe_this.scopes.top);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();