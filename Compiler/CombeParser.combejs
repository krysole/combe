// Generated by Combe compiler
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var Ast = require("./CombeAst");
var CombeLexer = require("./CombeLexer");
var CombeParser = (module["exports"] = TokenGrammar.subclass((function () {
var __combe_object = {};
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "initialize", (function (source, filename) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
CombeParser["prototype"]["__proto__"]["initialize"].call(__combe_this, source, filename);
(__combe_this["lexer"] = CombeLexer.new(source, filename));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "start", (function () {
return this.__combe_memoize("OmyunMTJiDGabsHAASyfkg", (function () {
return this.script.call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "script", (function () {
return this.__combe_memoize("cmLt9GmJuCmASKJYekustQ", (function () {
var stmts;
return (function () {
(function () {
(function () {
return (stmts = (function () {
return this.__combe_repeat(this.statement);
}).call(this));
}).call(this);
return this.eof.call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Script(stmts);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "statement", (function () {
return this.__combe_memoize("aoZ94Ag/goSUqSKuxICvRQ", (function () {
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.varStatement, this.ifStatement);
}), this.whileStatement);
}), this.doWhileStatement);
}), this.forStatement);
}), this.tryCatchStatement);
}), this.expressionStatement);
}), this.emptyStatement);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "varStatement", (function () {
return this.__combe_memoize("Wp6+Qs78y452p8alEp346A", (function () {
var decls;
return (function () {
(function () {
(function () {
return this.id.call(this, "var");
}).call(this);
(function () {
return (decls = (function () {
return this.delimited1.call(this, this.variableDeclaration, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
return (function () {
return this.handleStringPattern(";");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.VarStatement(decls);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "variableDeclaration", (function () {
return this.__combe_memoize("yaOQehakpF2D6XvT5cyBfQ", (function () {
var name, expr;
return (function () {
(function () {
(function () {
return (name = this.variableIdentifier.call(this));
}).call(this);
return (function () {
return this.__combe_optional((function () {
(function () {
return this.handleStringPattern("=");
}).call(this);
return (function () {
return (expr = this.expression.call(this));
}).call(this);
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.VariableDeclaration(name, expr);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ifStatement", (function () {
return this.__combe_memoize("we8PFtDCLlsGtr2huSokSw", (function () {
var condition, consiquent, alternative;
return (function () {
(function () {
(function () {
return this.id.call(this, "if");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (condition = this.expression.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
(function () {
return (consiquent = this.statementBody.call(this));
}).call(this);
return (function () {
return this.__combe_optional((function () {
(function () {
return this.id.call(this, "else");
}).call(this);
return (function () {
return (alternative = this.statementBody.call(this));
}).call(this);
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.If(condition, consiquent, alternative);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "whileStatement", (function () {
return this.__combe_memoize("GqtqIoKOHqW952fv/mN+gw", (function () {
var condition, b;
return (function () {
(function () {
(function () {
return this.id.call(this, "while");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (condition = this.expression.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (b = this.statementBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.While(condition, b);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "doWhileStatement", (function () {
return this.__combe_memoize("xdpYY5w1NzkGWjnS1ggJZg", (function () {
var b, condition;
return (function () {
(function () {
(function () {
return this.id.call(this, "do");
}).call(this);
(function () {
return (b = this.statementBody.call(this));
}).call(this);
(function () {
return this.id.call(this, "while");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (condition = this.expression.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return this.handleStringPattern(";");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.DoWhile(b, condition);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "forStatement", (function () {
return this.__combe_memoize("3baeM8vabRy8J/8wmk/Reg", (function () {
var initExpr, condExpr, incExpr, b, decls;
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.id.call(this, "for");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (initExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (condExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (incExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (b = this.statementBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.For(initExpr, condExpr, incExpr, b);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return this.id.call(this, "for");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return this.id.call(this, "var");
}).call(this);
(function () {
return (decls = (function () {
return this.delimited1.call(this, this.variableDeclaration, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (condExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (incExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (b = this.statementBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ForDeclaring(decls, condExpr, incExpr, b);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "tryCatchStatement", (function () {
return this.__combe_memoize("Kv+CVZlBuMWjKnXjJFKWXw", (function () {
var tryBody, catchBinding, catchBody, finallyBody;
return (function () {
(function () {
(function () {
return this.id.call(this, "try");
}).call(this);
(function () {
return (tryBody = this.statementBody.call(this));
}).call(this);
(function () {
return this.__combe_optional((function () {
(function () {
return this.id.call(this, "catch");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (catchBinding = this.variableIdentifier.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (catchBody = this.statementBody.call(this));
}).call(this);
}));
}).call(this);
(function () {
return this.__combe_optional((function () {
(function () {
return this.id.call(this, "finally");
}).call(this);
return (function () {
return (finallyBody = this.statementBody.call(this));
}).call(this);
}));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (/* if */ __combe_infixOperators["=="](catchBody, null)
? /* then */ (catchBinding = null)
: /* else */ null);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.TryCatch(tryBody, catchBinding, catchBody, finallyBody);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "expressionStatement", (function () {
return this.__combe_memoize("/xJzlJX2Uxklj0HdVSeIcA", (function () {
var expr;
return (function () {
(function () {
(function () {
return (expr = this.expression.call(this));
}).call(this);
return (function () {
return this.handleStringPattern(";");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "emptyStatement", (function () {
return this.__combe_memoize("QrQ6tYCkYymgc23T4nJKrw", (function () {
return (function () {
(function () {
return this.handleStringPattern(";");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Literal(null);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "expression", (function () {
return this.__combe_memoize("VxdBzrRhPr9WdlnnCcBmzw", (function () {
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.ifExpression, this.whileExpression);
}), this.doWhileExpression);
}), this.forExpression);
}), this.tryCatchExpression);
}), this.throwExpression);
}), this.returnExpression);
}), this.breakExpression);
}), this.continueExpression);
}), this.operatorExpression);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ifExpression", (function () {
return this.__combe_memoize("prgsZ7llUqpehXfdbtTUsA", (function () {
var condition, consiquent, alternative;
return (function () {
(function () {
(function () {
return this.id.call(this, "if");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (condition = this.expression.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
(function () {
return (consiquent = this.expressionBody.call(this));
}).call(this);
return (function () {
return this.__combe_optional((function () {
(function () {
return this.id.call(this, "else");
}).call(this);
return (function () {
return (alternative = this.expressionBody.call(this));
}).call(this);
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.If(condition, consiquent, alternative);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "whileExpression", (function () {
return this.__combe_memoize("EmO9WdvK+0ifVFe0gsDMuA", (function () {
var condition, b;
return (function () {
(function () {
(function () {
return this.id.call(this, "while");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (condition = this.expression.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (b = (function () {
return this.__combe_optional(this.expressionBody);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.While(condition, b);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "doWhileExpression", (function () {
return this.__combe_memoize("fD1K6z6OuPFfWt/3O+869A", (function () {
var b, condition;
return (function () {
(function () {
(function () {
return this.id.call(this, "do");
}).call(this);
(function () {
return (b = this.expressionBody.call(this));
}).call(this);
(function () {
return this.id.call(this, "while");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (condition = this.expression.call(this));
}).call(this);
return (function () {
return this.handleStringPattern(")");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.DoWhile(b, condition);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "forExpression", (function () {
return this.__combe_memoize("XbmWC9Tdf1Yl5X3bYAHTLA", (function () {
var initExpr, condExpr, incExpr, b, decls;
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.id.call(this, "for");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (initExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (condExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (incExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (b = (function () {
return this.__combe_optional(this.expressionBody);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.For(initExpr, condExpr, incExpr, b);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return this.id.call(this, "for");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return this.id.call(this, "var");
}).call(this);
(function () {
return (decls = (function () {
return this.delimited1.call(this, this.variableDeclaration, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (condExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(";");
}).call(this);
(function () {
return (incExpr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (b = (function () {
return this.__combe_optional(this.expressionBody);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ForDeclaring(decls, condExpr, incExpr, b);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "tryCatchExpression", (function () {
return this.__combe_memoize("kNOlsYkRlolhUV2dsocMJA", (function () {
var tryBody, catchBinding, catchBody, finallyBody;
return (function () {
(function () {
(function () {
return this.id.call(this, "try");
}).call(this);
(function () {
return (tryBody = this.expressionBody.call(this));
}).call(this);
(function () {
return this.__combe_optional((function () {
(function () {
return this.id.call(this, "catch");
}).call(this);
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (catchBinding = this.variableIdentifier.call(this));
}).call(this);
(function () {
return this.handleStringPattern(")");
}).call(this);
return (function () {
return (catchBody = this.expressionBody.call(this));
}).call(this);
}));
}).call(this);
(function () {
return this.__combe_optional((function () {
(function () {
return this.id.call(this, "finally");
}).call(this);
return (function () {
return (finallyBody = this.expressionBody.call(this));
}).call(this);
}));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (/* if */ __combe_infixOperators["=="](catchBody, null)
? /* then */ (catchBinding = null)
: /* else */ null);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.TryCatch(tryBody, catchBinding, catchBody, finallyBody);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "throwExpression", (function () {
return this.__combe_memoize("ROy8+lWQF6O2Za4mxspXlg", (function () {
var expr;
return (function () {
(function () {
(function () {
return this.id.call(this, "throw");
}).call(this);
return (function () {
return (expr = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Throw(expr);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "returnExpression", (function () {
return this.__combe_memoize("oNkSUdUJKDloFp+k1crvhg", (function () {
var expr;
return (function () {
(function () {
(function () {
return this.id.call(this, "return");
}).call(this);
return (function () {
return (expr = (function () {
return this.__combe_optional(this.expression);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Return(expr);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "breakExpression", (function () {
return this.__combe_memoize("4/hQXDiySq9xQPwqCvY8ng", (function () {
return (function () {
(function () {
return this.id.call(this, "break");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Break();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "continueExpression", (function () {
return this.__combe_memoize("Ed2csVk3AAQrIaLWgM2EaA", (function () {
return (function () {
(function () {
return this.id.call(this, "continue");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Continue();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "statementBody", (function () {
return this.__combe_memoize("+OMhXghpMfvNUAhD1qa7JQ", (function () {
return (function () {
return this.__combe_choice(this.statement, this.block);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "expressionBody", (function () {
return this.__combe_memoize("85VHpo9FrajpcLByhy35Gg", (function () {
return (function () {
return this.__combe_choice(this.expression, this.block);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "block", (function () {
return this.__combe_memoize("4zRFJmSQBcCyvDU8O4C9Gg", (function () {
var stmts;
return (function () {
(function () {
(function () {
return this.handleStringPattern("{");
}).call(this);
(function () {
return (stmts = (function () {
return this.__combe_repeat(this.statement);
}).call(this));
}).call(this);
return (function () {
return this.handleStringPattern("}");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Block(stmts);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "operatorExpression", (function () {
return this.__combe_memoize("XK4plZl/6zvnQFUngRkzpQ", (function () {
return this.assignmentExpression.call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "lvalueTypes", ["Variable", "Subscript", "Dot"]);
__combe_defineValueProperty(__combe_object, "assignmentExpression", (function () {
return this.__combe_memoize("up4IW3EiOu5B680YMbo6ZQ", (function () {
var lhs, rhs, op;
return (function () {
return this.__combe_choice((function () {
(function () {
return (lhs = this.secondaryExpression.call(this));
}).call(this);
(function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_this["lvalueTypes"].include(lhs["type"]);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.handleStringPattern("=");
}).call(this);
return (function () {
return (rhs = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Assignment(lhs, rhs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return (op = (function () {
return this.handleStringPattern("operatorAssignment");
}).call(this));
}).call(this);
return (function () {
return (rhs = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.OperatorAssignment(op, lhs, rhs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}), this.conditionalExpression);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "conditionalExpression", (function () {
return this.__combe_memoize("HJ1c/ZV1DHQDqgudD9kkhw", (function () {
var condition, consiquent, alternative;
return (function () {
(function () {
return (condition = this.logicalOrExpression.call(this));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.handleStringPattern("?");
}).call(this);
(function () {
return (consiquent = this.expression.call(this));
}).call(this);
(function () {
return this.handleStringPattern(":");
}).call(this);
return (function () {
return (alternative = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.If(condition, consiquent, alternative);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return condition;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "logicalOrExpression", (function () {
return this.__combe_memoize("HtDH6JrQBGX1YX3WDPwylw", (function () {
return (function () {
return this.leftAssociative.call(this, this.logicalXorExpression, (function () {
return this.handleStringPattern("||");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "logicalXorExpression", (function () {
return this.__combe_memoize("F5HitAyjclUlmuAdq57v+Q", (function () {
return (function () {
return this.leftAssociative.call(this, this.logicalAndExpression, (function () {
return this.handleStringPattern("^^");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "logicalAndExpression", (function () {
return this.__combe_memoize("B38GcgfLjHMAeQ3AEgAyxA", (function () {
return (function () {
return this.leftAssociative.call(this, this.equalityExpression, (function () {
return this.handleStringPattern("&&");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "equalityExpression", (function () {
return this.__combe_memoize("qKMj3fSF8ElrYaLUX0LCPw", (function () {
return (function () {
return this.leftAssociative.call(this, this.relationalExpression, (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("==");
}), (function () {
return this.handleStringPattern("!=");
}));
}), (function () {
return this.handleStringPattern("===");
}));
}), (function () {
return this.handleStringPattern("!==");
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "relationalExpression", (function () {
return this.__combe_memoize("DC9Sb+X8SqCtxGgt+8zp9w", (function () {
return (function () {
return this.leftAssociative.call(this, this.bitwiseOrExpression, (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("<");
}), (function () {
return this.handleStringPattern("<=");
}));
}), (function () {
return this.handleStringPattern(">=");
}));
}), (function () {
return this.handleStringPattern(">");
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "bitwiseOrExpression", (function () {
return this.__combe_memoize("gvqkKSVUdhf7eZXN9z9Spg", (function () {
return (function () {
return this.leftAssociative.call(this, this.bitwiseXorExpression, (function () {
return this.handleStringPattern("|");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "bitwiseXorExpression", (function () {
return this.__combe_memoize("lsdzqO7R1aS05/TNcQuRSg", (function () {
return (function () {
return this.leftAssociative.call(this, this.bitwiseAndExpression, (function () {
return this.handleStringPattern("^");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "bitwiseAndExpression", (function () {
return this.__combe_memoize("nOHBnbghBt9C2hQW8uQ5Uw", (function () {
return (function () {
return this.leftAssociative.call(this, this.shiftExpression, (function () {
return this.handleStringPattern("&");
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "shiftExpression", (function () {
return this.__combe_memoize("JDnS6O4uwOvS98IHdcdOEA", (function () {
return (function () {
return this.leftAssociative.call(this, this.additiveExpression, (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("<<");
}), (function () {
return this.handleStringPattern(">>");
}));
}), (function () {
return this.handleStringPattern(">>>");
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "additiveExpression", (function () {
return this.__combe_memoize("jktXtqUQwnLnz+K7Pni/Rw", (function () {
return (function () {
return this.leftAssociative.call(this, this.multiplicativeExpression, (function () {
return this.__combe_choice((function () {
return this.handleStringPattern("+");
}), (function () {
return this.handleStringPattern("-");
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "multiplicativeExpression", (function () {
return this.__combe_memoize("CQzeCOITMezP18KdVP3fNQ", (function () {
return (function () {
return this.leftAssociative.call(this, this.rangeExpression, (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("*");
}), (function () {
return this.handleStringPattern("/");
}));
}), (function () {
return this.handleStringPattern("%");
}));
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "rangeExpression", (function () {
return this.__combe_memoize("5r2Bh32wfFsDAj3WRKurjA", (function () {
var expr, rhs;
return (function () {
(function () {
return (expr = this.prefixExpression.call(this));
}).call(this);
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.handleStringPattern("..");
}).call(this);
return (function () {
return (rhs = (function () {
return this.__combe_choice(this.rangeInfinity, this.prefixExpression);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.InclusiveRange(expr, rhs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return this.handleStringPattern("...");
}).call(this);
return (function () {
return (rhs = (function () {
return this.__combe_choice(this.rangeInfinity, this.prefixExpression);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ExclusiveRange(expr, rhs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "rangeInfinity", (function () {
return this.__combe_memoize("8xLNPobPugdrEyiMwYJ8/Q", (function () {
return (function () {
(function () {
return this.handleStringPattern("*");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Literal(null);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "prefixExpression", (function () {
return this.__combe_memoize("asywfd24tgVHX/PcYNfzuQ", (function () {
var op, expr;
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return (op = (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.handleStringPattern("++");
}), (function () {
return this.handleStringPattern("--");
}));
}), (function () {
return this.handleStringPattern("+");
}));
}), (function () {
return this.handleStringPattern("-");
}));
}), (function () {
return this.handleStringPattern("~");
}));
}), (function () {
return this.handleStringPattern("!");
}));
}).call(this));
}).call(this);
return (function () {
return (expr = this.prefixExpression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.PrefixOperator(op["text"], expr);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), this.postfixExpression);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "postfixExpression", (function () {
return this.__combe_memoize("uJEwh8eJsIZsNCQnH2Xa7g", (function () {
var expr, op;
return (function () {
(function () {
return (expr = this.secondaryExpression.call(this));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
return (op = (function () {
return this.__combe_choice((function () {
return this.handleStringPattern("++");
}), (function () {
return this.handleStringPattern("--");
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.PostfixOperator(op["text"], expr);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "leftAssociative", (function (operand, operator) {
var expr, op, rhs;
return (function () {
(function () {
(function () {
return (expr = operand.call(this));
}).call(this);
return (function () {
return this.__combe_repeat((function () {
(function () {
return (op = operator.call(this));
}).call(this);
(function () {
return (rhs = operand.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (expr = Ast.InfixOperator(op["text"], expr, rhs));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
__combe_defineValueProperty(__combe_object, "rightAssociative", (function (operand, operator) {
var expr, op, rhs;
return (function () {
(function () {
return (expr = operand.call(this));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return (op = operator.call(this));
}).call(this);
return (function () {
return (rhs = (function () {
return this.rightAssociative.call(this, operand, operator);
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.InfixOperator(op["text"], expr, rhs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
}));
__combe_defineValueProperty(__combe_object, "secondaryExpression", (function () {
return this.__combe_memoize("QlvmVKt7P3ptAqeCaR+Zrg", (function () {
var expr;
return (function () {
(function () {
(function () {
return (expr = this.primaryExpression.call(this));
}).call(this);
return (function () {
return this.__combe_repeat((function () {
return (expr = (function () {
return this.secondaryExpressionFragment.call(this, expr);
}).call(this));
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "secondaryExpressionFragment", (function (subject) {
var args, name;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return (args = this.arguments.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Call(subject, args);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return this.handleStringPattern("[");
}).call(this);
(function () {
return (args = (function () {
return this.delimited.call(this, this.expression, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
return (function () {
return this.handleStringPattern("]");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Subscript(subject, args);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
(function () {
return (name = (function () {
return this.handleStringPattern("identifier");
}).call(this));
}).call(this);
return (function () {
return (args = this.arguments.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.MethodCall(subject, name["text"], args);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern(".");
}).call(this);
return (function () {
return (name = (function () {
return this.handleStringPattern("identifier");
}).call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Dot(subject, name["text"]);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
__combe_defineValueProperty(__combe_object, "arguments", (function () {
return this.__combe_memoize("FOPS0WnNknqurUBp4FDc0w", (function () {
var args;
return (function () {
(function () {
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (args = (function () {
return this.delimited.call(this, this.expression, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
return (function () {
return this.handleStringPattern(")");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return args;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "parameters", (function () {
return this.__combe_memoize("p0tQQ61Erk9LLSpphYWl2w", (function () {
var args;
return (function () {
(function () {
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (args = (function () {
return this.delimited.call(this, this.variableIdentifier, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
return (function () {
return this.handleStringPattern(")");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return args;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "functionBody", (function () {
return this.__combe_memoize("vGGzP9qS6w8uHrAHXdlUsw", (function () {
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern("->");
}).call(this);
return this.expression.call(this);
}), this.block);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "primaryExpression", (function () {
return this.__combe_memoize("eKrL7fCa7lxUVfQV/HPS0A", (function () {
var name;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.valueLiteral, (function () {
(function () {
return this.id.call(this, "this");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.This();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return (name = this.variableIdentifier.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Variable(name);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), this.arrayLiteral);
}), this.objectLiteral);
}), this.functionLiteral);
}), this.ruleLiteral);
}), this.subexpression);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "valueLiteral", (function () {
return this.__combe_memoize("Z/qTS/PImKJaYIGFv0eZmw", (function () {
var value, n, s, r;
return (function () {
(function () {
return (value = (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.id.call(this, "null");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return null;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
return this.id.call(this, "undefined");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return undefined;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.id.call(this, "true");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return true;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.id.call(this, "false");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return false;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return (n = (function () {
return this.handleStringPattern("number");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return n["value"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return (s = (function () {
return this.handleStringPattern("string");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return s["value"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return (r = (function () {
return this.handleStringPattern("regex");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return r["value"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Literal(value);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "arrayLiteral", (function () {
return this.__combe_memoize("CkEifXXmwBWzUTcuyPnkXA", (function () {
var elems;
return (function () {
(function () {
(function () {
return this.handleStringPattern("[");
}).call(this);
(function () {
return (elems = (function () {
return this.delimited.call(this, this.arrayElement, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_optional((function () {
return this.handleStringPattern(",");
}));
}).call(this);
return (function () {
return this.handleStringPattern("]");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Array(elems);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "arrayElement", (function () {
return this.__combe_memoize("NlDl70qiXUMKIGVYWmMGtg", (function () {
return (function () {
return this.__combe_choice(this.expression, (function () {
(function () {
return this.__combe_lookahead((function () {
return this.handleStringPattern(",");
}));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Literal(null);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "objectLiteral", (function () {
return this.__combe_memoize("boFYA31UtV4Pc5p97EhtJg", (function () {
var decls;
return (function () {
(function () {
(function () {
return this.handleStringPattern("{");
}).call(this);
(function () {
return (decls = (function () {
return this.delimited.call(this, this.property, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_optional((function () {
return this.handleStringPattern(",");
}));
}).call(this);
return (function () {
return this.handleStringPattern("}");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Object(decls);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "property", (function () {
return this.__combe_memoize("FO/ZrRAlu9kDhL7Ri2HT8Q", (function () {
var name, pv, params, body, expr;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
(function () {
return (name = this.propertyName.call(this));
}).call(this);
return (function () {
return (pv = this.propertyValue.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ValueProperty(name, pv);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return this.id.call(this, "get");
}).call(this);
(function () {
return (name = this.propertyName.call(this));
}).call(this);
return (function () {
return (pv = this.propertyValue.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.GetProperty(name, pv);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.id.call(this, "set");
}).call(this);
(function () {
return (name = this.propertyName.call(this));
}).call(this);
return (function () {
return (pv = this.propertyValue.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.SetProperty(name, pv);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.id.call(this, "rule");
}).call(this);
(function () {
return (name = this.propertyName.call(this));
}).call(this);
(function () {
return (params = (function () {
return this.__combe_optional(this.parameters);
}).call(this));
}).call(this);
return (function () {
return (body = this.ruleBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ValueProperty(name, Ast.Rule(params, body));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.id.call(this, "describe");
}).call(this);
(function () {
return (name = this.propertyName.call(this));
}).call(this);
(function () {
return this.handleStringPattern(":");
}).call(this);
return (function () {
return (expr = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.DescribeProperty(name, expr);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "propertyValue", (function () {
return this.__combe_memoize("Hqg8lxJXHR7r4VqwruZkSw", (function () {
var expr, params, body;
return (function () {
return this.__combe_choice((function () {
(function () {
return this.handleStringPattern(":");
}).call(this);
return (function () {
return (expr = this.expression.call(this));
}).call(this);
}), (function () {
(function () {
(function () {
return (params = (function () {
return this.__combe_optional(this.parameters);
}).call(this));
}).call(this);
return (function () {
return (body = this.functionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Function(params, body);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "functionLiteral", (function () {
return this.__combe_memoize("3NmEAyjYGQodLhzMXkB/1Q", (function () {
var params, e, p, body;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
(function () {
return (params = (function () {
return this.__combe_optional(this.parameters);
}).call(this));
}).call(this);
(function () {
return this.handleStringPattern("->");
}).call(this);
return (function () {
return (e = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Function(params, e);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return (p = this.variableIdentifier.call(this));
}).call(this);
(function () {
return this.handleStringPattern("->");
}).call(this);
return (function () {
return (e = this.expression.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Function([p], e);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.id.call(this, "function");
}).call(this);
(function () {
return (params = (function () {
return this.__combe_optional(this.parameters);
}).call(this));
}).call(this);
return (function () {
return (body = this.functionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Function(params, body);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ruleLiteral", (function () {
return this.__combe_memoize("fahfQ+I0F+bcpTqG1jj4Mw", (function () {
var params, body;
return (function () {
(function () {
(function () {
return this.id.call(this, "rule");
}).call(this);
(function () {
return (params = (function () {
return this.__combe_optional(this.parameters);
}).call(this));
}).call(this);
return (function () {
return (body = this.ruleBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Rule(params, body);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ruleBody", (function () {
return this.__combe_memoize("53hWgmkMKBsMkFarX51ZDA", (function () {
var p;
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.handleStringPattern("{");
}).call(this);
(function () {
return (p = this.pattern.call(this));
}).call(this);
return (function () {
return this.handleStringPattern("}");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return p;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), this.operatorPattern);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "subexpression", (function () {
return this.__combe_memoize("mv0EpTYzyxqKK1No0UjEbg", (function () {
var expr;
return (function () {
(function () {
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (expr = this.expressionSequence.call(this));
}).call(this);
return (function () {
return this.handleStringPattern(")");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return expr;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "expressionSequence", (function () {
return this.__combe_memoize("8iilK7SCJkn8GArIlIr0rA", (function () {
var exprs;
return (function () {
(function () {
return (exprs = (function () {
return this.delimited1.call(this, this.expression, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
(function () {
return this.__combe_optional((function () {
return this.handleStringPattern(",");
}));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_infixOperators["=="](exprs["length"], 1);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return exprs.subscript(0);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.Sequence(exprs);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "pattern", (function () {
return this.__combe_memoize("VvZw2AKECVHfigCxjvi9Xg", (function () {
return this.choicePattern.call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "choicePattern", (function () {
return this.__combe_memoize("H2E9s7E3x7LAWg0D17A1jg", (function () {
var p, p2;
return (function () {
(function () {
(function () {
return this.__combe_optional((function () {
return this.handleStringPattern("|");
}));
}).call(this);
(function () {
return (p = this.returnPattern.call(this));
}).call(this);
return (function () {
return this.__combe_repeat((function () {
(function () {
return this.handleStringPattern("|");
}).call(this);
(function () {
return (p2 = this.returnPattern.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.ChoicePattern([p, p2]));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return p;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "returnPattern", (function () {
return this.__combe_memoize("Fs3Rh56zmjNI1UWmFadnQQ", (function () {
var p, e;
return (function () {
return this.__combe_choice((function () {
(function () {
return (p = this.sequencePattern.call(this));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.handleStringPattern("->");
}).call(this);
return (function () {
return (e = this.actionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.SequencePattern([p, Ast.ActionPattern(e)]);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return p;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}), (function () {
(function () {
(function () {
return this.handleStringPattern("->");
}).call(this);
return (function () {
return (e = this.actionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ActionPattern(e);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "sequencePattern", (function () {
return this.__combe_memoize("+9JXTfC/NoTmxKdBGm83uQ", (function () {
var ps;
return (function () {
(function () {
return (ps = (function () {
return this.__combe_nonZeroRepeat(this.operatorPattern);
}).call(this));
}).call(this);
return (function () {
return this.__combe_choice((function () {
(function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return (ps["length"] > 1);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.SequencePattern(ps);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
var __combe_this = this;
var __combe_return = null;
try {
return ps.subscript(0);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "operatorPattern", (function () {
return this.__combe_memoize("7fqQCaZ51ZkuU00xbe9ETw", (function () {
return this.prefixOperatorPattern.call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "prefixOperatorPattern", (function () {
return this.__combe_memoize("/eEcnF3SJ7rccfoPaYSwng", (function () {
var p;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
(function () {
return this.handleStringPattern("~");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
return (function () {
return (p = this.prefixOperatorPattern.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.NotPattern(p);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
(function () {
return this.handleStringPattern("&");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
return (function () {
return (p = this.prefixOperatorPattern.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.LookaheadPattern(p);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
(function () {
return this.handleStringPattern("#");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
return (function () {
return (p = this.prefixOperatorPattern.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.HashOperatorPattern(p);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), this.postfixOperatorPattern);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "postfixOperatorPattern", (function () {
return this.__combe_memoize("+n6waD/v2KVyyjHEi/w/8Q", (function () {
var p, name;
return (function () {
(function () {
(function () {
return (p = this.callPattern.call(this));
}).call(this);
return (function () {
return this.__combe_repeat((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return this.handleStringPattern("*");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.RepeatPattern(p));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return this.handleStringPattern("+");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.NonZeroRepeatPattern(p));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return this.handleStringPattern("?");
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.OptionalPattern(p));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return this.handleStringPattern(":");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return (name = this.variableIdentifier.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.BindPattern(p, name));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return p;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "callPattern", (function () {
return this.__combe_memoize("Z/4ie/NFv4rLJ1Tmll/DCA", (function () {
var p, args;
return (function () {
(function () {
(function () {
return (p = this.primaryPattern.call(this));
}).call(this);
return (function () {
return this.__combe_repeat((function () {
return this.__combe_choice((function () {
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return (args = this.arguments.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.CallPattern(p, args));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
return this.__combe_not(this.ws);
}).call(this);
(function () {
return (args = this.patternArguments.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (p = Ast.CallPattern(p, args));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return p;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "patternArguments", (function () {
return this.__combe_memoize("NeVRSmh10JSKkB6ehksWOQ", (function () {
var args;
return (function () {
(function () {
(function () {
return this.handleStringPattern("[");
}).call(this);
(function () {
return (args = (function () {
return this.delimited.call(this, this.pattern, (function () {
return this.handleStringPattern(",");
}));
}).call(this));
}).call(this);
return (function () {
return this.handleStringPattern("]");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return args;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "primaryPattern", (function () {
return this.__combe_memoize("EGg5GyAAEaUI8jknzM26GA", (function () {
var p;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.predicatePattern, this.actionPattern);
}), this.immediateActionPattern);
}), this.stringPattern);
}), this.variablePattern);
}), (function () {
(function () {
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (p = this.pattern.call(this));
}).call(this);
return (function () {
return this.handleStringPattern(")");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return p;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "predicatePattern", (function () {
return this.__combe_memoize("ok60JzhIiM5hd9DXyOT4FA", (function () {
var e;
return (function () {
(function () {
(function () {
return this.handleStringPattern("?");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
return (function () {
return (e = this.actionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.PredicatePattern(e);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "actionPattern", (function () {
return this.__combe_memoize("P4Ya/fUaIYTS5FlxV2HBfg", (function () {
var e;
return (function () {
(function () {
(function () {
return this.handleStringPattern("!");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
return (function () {
return (e = this.actionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ActionPattern(e);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "immediateActionPattern", (function () {
return this.__combe_memoize("h2NUqYAeKkWfcjUo1JZ1hQ", (function () {
var e;
return (function () {
(function () {
(function () {
return this.handleStringPattern("%");
}).call(this);
(function () {
return this.__combe_not(this.ws);
}).call(this);
return (function () {
return (e = this.actionBody.call(this));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.ImmediateActionPattern(e);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "actionBody", (function () {
return this.__combe_memoize("ILDWdsOHZ7CCyY+rXybuVA", (function () {
var e;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice(this.secondaryExpression, (function () {
(function () {
(function () {
return this.handleStringPattern("(");
}).call(this);
(function () {
return (e = this.expression.call(this));
}).call(this);
return (function () {
return this.handleStringPattern(")");
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return e;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), this.block);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "stringPattern", (function () {
return this.__combe_memoize("HMRw6r3GQoPPduoE6fHkig", (function () {
var s;
return (function () {
(function () {
return (s = (function () {
return this.handleStringPattern("string");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.StringPattern(s["value"]);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "variablePattern", (function () {
return this.__combe_memoize("Vb3b0lk/rx8GTzE7cVGUWw", (function () {
var name;
return (function () {
(function () {
return (name = this.variableIdentifier.call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return Ast.VariablePattern(name);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "id", (function (expectedName) {
var name;
return (function () {
(function () {
(function () {
return (name = (function () {
return this.handleStringPattern("identifier");
}).call(this));
}).call(this);
return (function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_infixOperators["=="](name["text"], expectedName);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return name;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
__combe_defineValueProperty(__combe_object, "variableIdentifier", (function () {
return this.__combe_memoize("2I7bZC8hypOY83KDNJA+Xg", (function () {
var name;
return (function () {
(function () {
(function () {
return (name = (function () {
return this.handleStringPattern("identifier");
}).call(this));
}).call(this);
return (function () {
return this.__combe_predicate((function () {
var __combe_this = this;
var __combe_return = null;
try {
return (!name["reserved"]);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}).call(this);
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return name["text"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "propertyName", (function () {
return this.__combe_memoize("FMoMplYl/3yQPPFMf/LuyA", (function () {
var t;
return (function () {
return this.__combe_choice((function () {
return this.__combe_choice((function () {
(function () {
return (t = (function () {
return this.handleStringPattern("identifier");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return t["text"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}), (function () {
(function () {
return (t = (function () {
return this.handleStringPattern("string");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return t["value"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}), (function () {
(function () {
return (t = (function () {
return this.handleStringPattern("number");
}).call(this));
}).call(this);
return (function () {
var __combe_this = this;
var __combe_return = null;
try {
return t["text"];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}).call(this);
}));
}).call(this);
}));
}));
__combe_defineValueProperty(__combe_object, "ws", (function () {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(/* if */ ((__combe_this.last()["position"] + __combe_this.last()["length"]) !== __combe_this.peek()["position"])
? /* then */ (function () {
(function () { throw (__combe_return = { value: null }); })();
})()
: /* else */ (function () {
__combe_this.fail();
})());
null;
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();