// Generated by Combe/JS Compiler

var util = require('./util');
var Range = require('./range');

var ParentParser = (require('./base_parser'));
var CombeASTIdempotent = module.exports = function () {
  ParentParser.call(this);
};

util.extend((CombeASTIdempotent.prototype = Object.create(ParentParser.prototype)), {

translate: function (ast) {
return this._apply((function () {return this._apply(this.withObject, ast, this.recur);}));
},

recur: function () {
var ruleName, result;
return this._apply((function () {return this._concat((function () {return this._destructure((function () {return this._concat((function () {return (ruleName = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return (result = this._apply((function () {return this._apply(this.apply, (this.getRule(ruleName)));})));}));}));}),
(function () {return ( result
  );}));}));
},

CombeFile: function () {
var sections;
return this._apply((function () {return this._concat((function () {return (sections = this._apply((function () {return this._repeat(this.recur);})));}),
(function () {return ( ['CombeFile'].concat(sections)
  );}));}));
},

Header: function () {
var jsCode;
return this._apply((function () {return this._concat((function () {return (jsCode = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['Header', jsCode]
  );}));}));
},

Grammar: function () {
var name, parent, rules;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return (parent = this._apply(this.recur));}),
(function () {return this._destructure((function () {return (rules = this._apply((function () {return this._repeat(this.recur);})));}));}),
(function () {return ( ['Grammar', name, parent, rules]
  );}));}));
},

Parent: function () {
var jsCode;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return this._destructure((function () {return this._concat('JSExpr',
(function () {return (jsCode = this._apply((function () {return this._apply(this.anything);})));}));}));}),
(function () {return ( ['Parent', ['JSExpr', jsCode]]
    );}));}),
(function () {return this._concat((function () {return this._destructure('DefaultParent');}),
(function () {return ( ['Parent', ['DefaultParent']]
  );}));}));}));
},

Rule: function () {
var name, args, vars, expr;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return (args = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return (vars = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Rule', name, args, vars, expr]
  );}));}));
},

Choice: function () {
var exprs;
return this._apply((function () {return this._concat((function () {return (exprs = this._apply((function () {return this._repeat1(this.recur);})));}),
(function () {return ( ['Choice'].concat(exprs)
  );}));}));
},

Concat: function () {
var exprs;
return this._apply((function () {return this._concat((function () {return (exprs = this._apply((function () {return this._repeat1(this.recur);})));}),
(function () {return ( ['Concat'].concat(exprs)
  );}));}));
},

Action: function () {
var jsExpr;
return this._apply((function () {return this._concat((function () {return (jsExpr = this._apply(this.recur));}),
(function () {return ( ['Action', jsExpr]
  );}));}));
},

Bind: function () {
var name, expr;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Bind', name, expr]
  );}));}));
},

Not: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Not', expr]
  );}));}));
},

Lookahead: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Lookahead', expr]
  );}));}));
},

Repeat: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Repeat', expr]
  );}));}));
},

Repeat1: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Repeat1', expr]
  );}));}));
},

Optional: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Optional', expr]
  );}));}));
},

TokenIdentifier: function () {
var name;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['TokenIdentifier', name]
  );}));}));
},

TokenString: function () {
var string;
return this._apply((function () {return this._concat((function () {return (string = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['TokenString', string]
  );}));}));
},

TokenParser: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['TokenParser', expr]
  );}));}));
},

Predicate: function () {
var jsExpr;
return this._apply((function () {return this._concat((function () {return (jsExpr = this._apply(this.recur));}),
(function () {return ( ['Predicate', jsExpr]
  );}));}));
},

Apply: function () {
var expr, argExprs;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return this._destructure((function () {return (argExprs = this._apply((function () {return this._repeat(this.recur);})));}));}),
(function () {return ( ['Apply', expr, argExprs]
    );}));}),
(function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Apply', expr]
  );}));}));}));
},

ImmediateAction: function () {
var jsExpr;
return this._apply((function () {return this._concat((function () {return (jsExpr = this._apply(this.recur));}),
(function () {return ( ['ImmediateAction', jsExpr]
  );}));}));
},

Destructure: function () {
var expr;
return this._apply((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {return ( ['Destructure', expr]
  );}));}));
},

Range: function () {
var leftExpr, rightExpr;
return this._apply((function () {return this._concat((function () {return (leftExpr = this._apply(this.recur));}),
(function () {return (rightExpr = this._apply(this.recur));}),
(function () {return ( ['Range', leftExpr, rightExpr]
  );}));}));
},

Infinity: function () {
return this._apply((function () {return ( ['Infinity']
  );}));
},

String: function () {
var string;
return this._apply((function () {return this._concat((function () {return (string = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['String', string]
  );}));}));
},

Number: function () {
var number;
return this._apply((function () {return this._concat((function () {return (number = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['Number', number]
  );}));}));
},

Variable: function () {
var name;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['Variable', name]
  );}));}));
},

Property: function () {
var name;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['Property', name]
  );}));}));
},

JSFunction: function () {
var jsCode;
return this._apply((function () {return this._concat((function () {return (jsCode = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['JSFunction', jsCode]
  );}));}));
},

JSExpr: function () {
var jsCode;
return this._apply((function () {return this._concat((function () {return (jsCode = this._apply((function () {return this._apply(this.anything);})));}),
(function () {return ( ['JSExpr', jsCode]
  );}));}));
}

});
