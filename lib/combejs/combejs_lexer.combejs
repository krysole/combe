//
// Combe/JS - A Parsing Language for JavaScript
//
// Copyright 2011 Lorenz Pretterhofer
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

header {
  var JSLexer = require('./jslexer');
}

combe CombeJSLexer (JSLexer) {
  
  rule extendedIdentifier[text] {
    | ?(['class', 'match', 'rule'].include(text))
      token[text, %(['keyword', 'reservedWord', 'identifierName'])]
    
    | ?(['get', 'set', 'describe'].include(text))
      token[text, %(['identifier', 'identifierName']), text]
  }
  
  rule punctuation {
    ( '...' | '..'
    
    | '{' | '}' | '(' | ')' | '[' | ']' | '.' | ';' | ',' 
    | '<' | '>' | '<=' | '>=' | '===' | '!==' | '==' | '!='
    | '+' | '-' | '*' | '%' | '&' | '|' | '^' | '!' | '~'
    | '&&' | '||' | '?' | ':' | '++' | '--' | '<<' | '>>' | '>>>'
    
    ):text
    token[text, %(['punctuation'])]
  }
  
}
