// Generated by Combe/JS Compiler

var extend = require('./util').extend;
var ParentParser = (require('./base_text_parser'));
var Range = require('./range');

var CombeParser = module.exports = function () {
  ParentParser.call(this);
};

extend((CombeParser.prototype = Object.create(ParentParser.prototype)), {

grammar: function () {
var name, parent, rules;
return this._apply((function () {return this._concat((function () {return this.stringTokenOperatorHandler('combe');}),
(function () {return (name = this._apply((function () {return this.identifierTokenOperatorHandler("identifier");})));}),
(function () {return (parent = this._apply(this.parentParser));}),
(function () {return this.stringTokenOperatorHandler('{');}),
(function () {return (rules = this._apply((function () {return this._repeat(this.rule);})));}),
(function () {return this.stringTokenOperatorHandler('}');}),
(function () {return this.identifierTokenOperatorHandler("eof");}),
(function () {return ( ['Grammar', name, parent, rules]
  );}));}));
},

parentParser: function () {
var jsExpr;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (jsExpr = this._apply((function () {return this._apply(this.jsExpr, '');})));}),
(function () {return ( ['Parent', jsExpr]
    );}));}),
(function () {return ( ['Parent', ['DefaultParent']]
  );}));}));
},

rule: function () {
var name, args, e;
return this._apply((function () {return this._concat((function () {return this.stringTokenOperatorHandler('rule');}),
(function () {this.locals = []; this.argnames = [];}),
(function () {return (name = this._apply((function () {return this.identifierTokenOperatorHandler("identifier");})));}),
(function () {return (args = this._apply(this.ruleArgumentList));}),
(function () {return this.stringTokenOperatorHandler('{');}),
(function () {return (e = this._apply(this.gexpr));}),
(function () {return this.stringTokenOperatorHandler('}');}),
(function () {return ( ['Rule', name, args, 
          this.locals.difference(this.argnames).withoutDuplicates(), e]
  );}));}));
},

ruleArgumentList: function () {
var args;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('[');}),
(function () {return (args = this._apply((function () {return this._apply(this.delimited, this.ruleArgument, (function () {return this.stringTokenOperatorHandler(',');}));})));}),
(function () {return this.stringTokenOperatorHandler(']');}),
(function () {return ( args
    );}));}),
(function () {return ( []
  );}));}));
},

ruleArgument: function () {
var name;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this.identifierTokenOperatorHandler("identifier");})));}),
(function () {this.argnames.push(name); this.locals.push(name);}),
(function () {return ( name
  );}));}));
},

gexpr: function () {
return this._apply(this.choice);
},

choice: function () {
var e, es;
return this._apply((function () {return this._concat((function () {return this._optional((function () {return this.stringTokenOperatorHandler('|');}));}),
(function () {return (e = this._apply(this.returnOperator));}),
(function () {return this._choice((function () {return this._concat((function () {return (es = this._apply((function () {return this._repeat1((function () {return this._concat((function () {return this.stringTokenOperatorHandler('|');}),
this.returnOperator);}));})));}),
(function () {return ( ['Choice', e].concat(es)
    );}));}),
(function () {return ( e
    );}));}));}));
},

returnOperator: function () {
var e, a;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (e = this._apply(this.concat));}),
(function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('->');}),
(function () {return (a = this._apply(this.returnOperatorArgument));}),
(function () {return ( ['Concat', e, a]
      );}));}),
(function () {return ( e
      );}));}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler('->');}),
this.returnOperatorArgument);}));}));
},

returnOperatorArgument: function () {
var js;
return this._apply((function () {return this._concat((function () {return (js = this._apply((function () {return this._choice((function () {return this._apply(this.jsFunction, '');}),
(function () {return this._apply(this.jsExpr, '');}),
this.jsUntilAnyDelim);})));}),
(function () {return ( ['Action', js]
  );}));}));
},

concat: function () {
var e, es;
return this._apply((function () {return this._concat((function () {return (e = this._apply(this.bind));}),
(function () {return this._choice((function () {return this._concat((function () {return (es = this._apply((function () {return this._repeat1(this.bind);})));}),
(function () {return ( ['Concat', e].concat(es)
    );}));}),
(function () {return ( e
    );}));}));}));
},

bind: function () {
var e, name;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (e = this._apply(this.lookahead));}),
(function () {return this._choice((function () {return this._concat(':',
(function () {return (name = this._apply(this.identifier));}),
(function () {return (this.locals.push(name));}),
(function () {return ( ['Bind', name, e]
      );}));}),
(function () {return ( e
      );}));}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler(':');}),
(function () {return (name = this._apply(this.identifier));}),
(function () {return (this.locals.push(name));}),
(function () {return ( ['Bind', name, ['Apply', ['Property', 'anything']]]
  );}));}));}));
},

lookahead: function () {
var e;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('~');}),
(function () {return (e = this._apply(this.repeat));}),
(function () {return ( ['Not', e]
    );}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler('&');}),
(function () {return (e = this._apply(this.repeat));}),
(function () {return ( ['Lookahead', e]
    );}));}),
this.repeat);}));
},

repeat: function () {
var e;
return this._apply((function () {return this._concat((function () {return (e = this._apply(this.term));}),
(function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('*');}),
(function () {return ( ['Repeat', e]
    );}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler('+');}),
(function () {return ( ['Repeat1', e]
    );}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler('?');}),
(function () {return ( ['Optional', e]
    );}));}),
(function () {return ( e
    );}));}));}));
},

term: function () {
return this._apply((function () {return this._choice(this.tokenOperator,
this.predicate,
this.action,
this.apply,
this.destructure,
this.range);}));
},

tokenOperator: function () {
var name, s, e;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('#');}),
(function () {return (name = this._apply(this.identifier));}),
(function () {return ( ['TokenIdentifier', name]
    );}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler('#');}),
(function () {return (s = this._apply(this.string));}),
(function () {return ( ['TokenString', s]
    );}));}),
(function () {return this._concat((function () {return this.stringTokenOperatorHandler('#');}),
(function () {return (e = this._apply(this.subexpr));}),
(function () {return ( ['TokenParser', e]
  );}));}));}));
},

predicate: function () {
var js;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (js = this._apply((function () {return this._apply(this.jsFunction, '?');})));}),
(function () {return ( ['Predicate', js]
    );}));}),
(function () {return this._concat((function () {return (js = this._apply((function () {return this._apply(this.jsExpr, '?');})));}),
(function () {return ( ['Predicate', js]
  );}));}));}));
},

action: function () {
var js;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (js = this._apply((function () {return this._apply(this.jsFunction, '!');})));}),
(function () {return ( ['Action', js]
    );}));}),
(function () {return this._concat((function () {return (js = this._apply((function () {return this._apply(this.jsExpr, '!');})));}),
(function () {return ( ['Action', js]
  );}));}));}));
},

apply: function () {
var e, args;
return this._apply((function () {return this._concat((function () {return (e = this._apply(this.range));}),
'[',
(function () {return (args = this._apply((function () {return this._apply(this.delimited, this.gexpr, (function () {return this.stringTokenOperatorHandler(',');}));})));}),
(function () {return this.stringTokenOperatorHandler(']');}),
(function () {return ( ['Apply', e, args]
  );}));}));
},

destructure: function () {
var e;
return this._apply((function () {return this._concat((function () {return this.stringTokenOperatorHandler('[');}),
(function () {return (e = this._apply(this.gexpr));}),
(function () {return this.stringTokenOperatorHandler(']');}),
(function () {return ( ['Destructure', e]
  );}));}));
},

range: function () {
var l, r;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (l = this._apply(this.simpleTerm));}),
(function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('..');}),
(function () {return (r = this._apply(this.rangeArgument));}),
(function () {return ( ['Range', l, r]
      );}));}),
(function () {return ( l
      );}));}));}),
(function () {return this._concat((function () {return (l = this._apply(this.rangeArgument));}),
(function () {return this.stringTokenOperatorHandler('..');}),
(function () {return (r = this._apply(this.rangeArgument));}),
(function () {return ( ['Range', l, r]
  );}));}));}));
},

rangeArgument: function () {
return this._apply((function () {return this._choice((function () {return this._concat((function () {return this.stringTokenOperatorHandler('*');}),
(function () {return ( ['Infinity']
    );}));}),
this.simpleTerm);}));
},

simpleTerm: function () {
return this._apply((function () {return this._choice(this.subexpr,
this.immediateAction,
this.literal,
this.variable);}));
},

subexpr: function () {
var e;
return this._apply((function () {return this._concat((function () {return this.stringTokenOperatorHandler('(');}),
(function () {return (e = this._apply(this.gexpr));}),
(function () {return this.stringTokenOperatorHandler(')');}),
(function () {return ( e
  );}));}));
},

immediateAction: function () {
var js;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (js = this._apply((function () {return this._apply(this.jsFunction, '%');})));}),
(function () {return ( ['ImmediateAction', js]
    );}));}),
(function () {return this._concat((function () {return (js = this._apply((function () {return this._apply(this.jsExpr, '%');})));}),
(function () {return ( ['ImmediateAction', js]
  );}));}));}));
},

literal: function () {
var s, n;
return this._apply((function () {return this._choice((function () {return this._concat((function () {return (s = this._apply((function () {return this.identifierTokenOperatorHandler("string");})));}),
(function () {return ( ['String', s]
    );}));}),
(function () {return this._concat((function () {return (n = this._apply((function () {return this.identifierTokenOperatorHandler("number");})));}),
(function () {return ( ['Number', s]
  );}));}));}));
},

variable: function () {
var name;
return this._apply((function () {return this._concat((function () {return (name = this._apply((function () {return this.identifierTokenOperatorHandler("identifier");})));}),
(function () {
        if (this.locals.include(name)) {
          return ['Variable', name];
        } else {
          // We assume all non-local vars are properties of the current grammar.
          return ['Property', name];
        }
      }));}));
},

jsFunction: function (prefix) {
var code;
return this._apply((function () {return this._concat((function () {return this.parserTokenOperatorHandler(prefix);}),
'{',
(function () {return (code = this._apply((function () {return this._apply(this.jsUntil, '}');})));}),
'}',
(function () {return ( ['JSFunction', code]
  );}));}));
},

jsExpr: function (prefix) {
var code;
return this._apply((function () {return this._concat((function () {return this.parserTokenOperatorHandler(prefix);}),
'(',
(function () {return (code = this._apply((function () {return this._apply(this.jsUntil, ')');})));}),
')',
(function () {return ( ['JSExpr', code]
  );}));}));
},

jsUntilAnyDelim: function () {
var code;
return this._apply((function () {return this._concat((function () {return (code = this._apply((function () {return this._apply(this.jsUntil, (function () {return this._choice('..',
',',
']',
')',
'}',
';',
'|');}));})));}),
(function () {return ( ['JSExpr', code]
  );}));}));
},

jsUntil: function (what) {
return this._apply((function () {return this._apply(this.matchedInput, (function () {return this._repeat((function () {return this._concat((function () {return this._not(what);}),
this.jsChar);}));}));}));
},

jsChar: function () {
return this._apply((function () {return this._choice(this.jsPair,
this.string,
this["char"]);}));
},

jsPair: function () {
return this._apply((function () {return this._choice((function () {return this._concat('(',
(function () {return this._repeat((function () {return this._concat((function () {return this._not(')');}),
this.jsChar);}));}),
')');}),
(function () {return this._concat('[',
(function () {return this._repeat((function () {return this._concat((function () {return this._not(']');}),
this.jsChar);}));}),
']');}),
(function () {return this._concat('{',
(function () {return this._repeat((function () {return this._concat((function () {return this._not('}');}),
this.jsChar);}));}),
'}');}));}));
},

string: function () {
return this._apply((function () {return this._apply(this.matchedInput, (function () {return this._choice((function () {return this._concat('\"',
(function () {return this._repeat((function () {return this._choice('\\\\',
'\\\"',
(function () {return this._concat((function () {return this._not('\"');}),
this["char"]);}));}));}),
'\"');}),
(function () {return this._concat('\'',
(function () {return this._repeat((function () {return this._choice('\\\\',
'\\\'',
(function () {return this._concat((function () {return this._not('\'');}),
this["char"]);}));}));}),
'\'');}));}));}));
},

number: function () {
return this._apply((function () {return this._apply(this.matchedInput, (function () {return this._repeat1(this.digit);}));}));
},

identifier: function () {
return this._apply((function () {return this._apply(this.matchedInput, (function () {return this._concat(this.idLetter,
(function () {return this._repeat(this.idLetterOrDigit);}));}));}));
},

idLetter: function () {
return this._apply((function () {return this._choice(this.letter,
'_');}));
},

idLetterOrDigit: function () {
return this._apply((function () {return this._choice(this.idLetter,
this.digit);}));
},

letter: function () {
return this._apply((function () {return this._choice((new Range('a', 'z')),
(new Range('A', 'Z')));}));
},

digit: function () {
return this._apply((new Range('0', '9')));
},

whitespace: function () {
return this._apply((function () {return this._choice((function () {return this._apply(this["char"], ' \t\r\n');}),
this.comment);}));
},

comment: function () {
return this._apply((function () {return this._choice((function () {return this._concat('//',
(function () {return this._repeat((function () {return this._concat((function () {return this._not(this.newline);}),
this["char"]);}));}),
this.newline);}),
(function () {return this._concat('/*',
(function () {return this._repeat((function () {return this._concat((function () {return this._not('*/');}),
this["char"]);}));}),
'*/');}));}));
},

newline: function () {
return this._apply((function () {return this._choice((function () {return this._concat('\r',
(function () {return this._optional('\n');}));}),
'\n',
this.eof);}));
},

defaultTokenOperatorHandler: function (what) {
return this._apply((function () {return this._concat((function () {return this._repeat(this.whitespace);}),
what);}));
},

identifierTokenOperatorHandler: function (name) {
return this._apply((function () {return (this.defaultTokenOperatorHandler(this[name]));}));
}

});
