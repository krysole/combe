// Generated by Combe/JS Compiler

var extend = require('./util').extend;
var ParentParser = (require('./combe_ast_idempotent'));
var Range = require('./range');

var CombeASTChoiceConcatOptimization = module.exports = function () {
  ParentParser.call(this);
};

extend((CombeASTChoiceConcatOptimization.prototype = Object.create(ParentParser.prototype)), {

Choice: function () {
var expr, exprs;
return this._apply((function () {return this._concat((function () {return (exprs = this._apply((function () {return this._repeat1((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {
      if (expr[0] === 'Choice') {
        return expr.slice(1);
      } else {
        return [expr];
      }
    }));}));})));}),
(function () {return ( ['Choice'].concat(exprs.flatten1())
  );}));}));
},

Concat: function () {
var expr, exprs;
return this._apply((function () {return this._concat((function () {return (exprs = this._apply((function () {return this._repeat1((function () {return this._concat((function () {return (expr = this._apply(this.recur));}),
(function () {
      if (expr[0] === 'Concat') {
        return expr.slice(1);
      } else {
        return [expr];
      }
    }));}));})));}),
(function () {return ( ['Concat'].concat(exprs.flatten1())
  );}));}));
}

});
