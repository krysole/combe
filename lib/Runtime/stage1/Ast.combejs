// Generated by Combe compiler (0.5.0)
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
(global.Ast = (module.exports = Object.subclass("Ast", (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "initialize", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
Object.classPrototype.initialize.call(self);
self.initTypeConstructors();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "initTypeConstructors", (function (types) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](types, null)
? /* then */ (types = self.types)
: /* else */ null);
(/* if */ __combe_infixOperators["=="](types, null)
? /* then */ (function () { throw (__combe_return = { value: undefined }); })()
: /* else */ null);
Object.getOwnPropertyNames(types).each((function (type) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(self[type] = (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
var attributes = Array.slice(arguments);
try {
return (function () {
(function () { throw (__combe_return = { value: self.new(type, types[type], attributes) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "initialize", (function (type, attributeNames, attributes) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(self.parent = null);
(self.type = type);
(self.attributeNames = attributeNames);
(/* if */ __combe_infixOperators["!="](attributes, null)
? /* then */ (function () {
assert(__combe_infixOperators["=="](attributeNames.length, attributes.length));
(function (i) {
while (__combe_infixOperators["<"](i, attributeNames.length)) {
try {
(self[attributeNames.subscript(i)] = attributes.subscript(i));
}
catch (__combe_e) {
if (__combe_e === __combe_break) break;
if (__combe_e !== __combe_continue) throw __combe_e;
}
(i++);
}
})(0);
})()
: /* else */ null);
self.children.each((function (child) {
var __combe_this = this;
var __combe_return = null;
try {
return (child.parent = self);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "copy", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(function () { throw (__combe_return = { value: Ast.new(self.type, self.attributeNames, self.attributes) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "deepCopy", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(function () { throw (__combe_return = { value: Ast.new(self.type, self.attributeNames.deepCopy(), self.attributes.deepCopy()) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "fix", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
self.fixParent(null);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "fixParent", (function (parent) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](parent, null)
? /* then */ (parent = null)
: /* else */ null);
(self.parent = parent);
self.children.each((function (child) {
var __combe_this = this;
var __combe_return = null;
try {
return child.fixParent(self);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "is", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
var types = Array.slice(arguments);
try {
return self.isAny(types);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "isAny", (function (types) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return types.any((function (type) {
var __combe_this = this;
var __combe_return = null;
try {
return __combe_infixOperators["=="](self.type, type);
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineGetProperty(__combe_object, "attributes", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return self.attributeNames.map((function (attributeName) {
var __combe_this = this;
var __combe_return = null;
try {
return self[attributeName];
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineGetProperty(__combe_object, "children", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var array = [];
self.attributeNames.each((function (name) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
self.pushChildrenIntoArray(self[name], array);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(function () { throw (__combe_return = { value: array }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "pushChildrenIntoArray", (function (what, array) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](what, null)
? /* then */ (function () {
})()
: /* else */ (/* if */ Ast.isClassOf(what)
? /* then */ (function () {
array.push(what);
})()
: /* else */ (/* if */ Array.isClassOf(what)
? /* then */ (function () {
what.each((function (element) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
self.pushChildrenIntoArray(element, array);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})()
: /* else */ (/* if */ __combe_infixOperators["=="](Object.getPrototypeOf(what), Object.prototype)
? /* then */ (function () {
Object.getOwnPropertyNames(what).each((function (name) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
self.pushChildrenIntoArray(what[name], array);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})()
: /* else */ (function () {
})()))));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "toString", (function () {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(function () { throw (__combe_return = { value: (((("<" + self.class.name) + " ") + self.type) + ">") }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})())));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();