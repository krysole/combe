//
// Combe - A Parsing Extension for JavaScript
//
// Copyright 2015 Lorenz Pretterhofer <krysole@alexicalmistake.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//
"use strict";

var Ast = require("../Ast.js");
var ObjectGrammar = require("../ObjectGrammar.js");



function Optimizer() {
  ObjectGrammar.call(this);
};
Optimizer.prototype = Object.create(ObjectGrammar.prototype);
Optimizer.prototype.constructor = Optimizer;
module.exports = Optimizer;



Optimizer.prototype.start = function (root) {
  return this.visitPostOrder(root, this.process);
};



Optimizer.prototype.process = rule {
  chain[
    ( elideSingleChoice   | identity ),
    ( elideSingleSequence | identity ),
    
    ( flattenChoice       | identity ),
    ( flattenSequence     | identity )
  ]
};



Optimizer.prototype.flattenSequence = rule {
  [^"Sequence", [ ( [^"Sequence", next*:xs] !xs
                  | next:x                  ![x]
                  )*:xss
                ]
  ]
  ![^"Sequence"].concat(xss.flatten1())
};

Optimizer.prototype.elideSingleSequence = rule {
  [^"Sequence", [next:x]]
  !x
};

Optimizer.prototype.flattenChoice = rule {
  [^"Choice", [ ( [^"Choice", next*:xs] !xs
                | next:x                ![x]
                )*:xss
              ]
  ]
  ![^"Choice"].concat(xss.flatten1())
};

Optimizer.prototype.elideSingleChoice = rule {
  [^"Choice", [next:x]]
  !x
};
