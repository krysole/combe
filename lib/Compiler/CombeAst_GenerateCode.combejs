// Generated by Combe compiler (0.5.0)
"use strict";
if (!__combe_runtimeLoaded) throw new Error("Combe runtime not loaded");
(function () {
var __combe_this = null;
var __combe_return = null;
try {
var crypto = require("crypto");
var AstVisitor = require("./AstVisitor");
var CombeAst = require("./CombeAst");
var CombeAst_GenerateCode = (module.exports = AstVisitor.subclass("CombeAst_GenerateCode", (function () {
var __combe_object = {};
return __combe_object;
})(), (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "order", "post");
__combe_defineValueProperty(__combe_object, "recurseOverUnspecified", false);
__combe_defineValueProperty(__combe_object, "handleScript", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var stmts = ast.statements.map((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [stmt.code, ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(ast.code = ["// Generated by Combe compiler (", CombeVersion, ")\n", "\"use strict\";\n", "if (!__combe_runtimeLoaded) throw new Error(\"Combe runtime not loaded\");\n", "(function () {\n", "var __combe_this = null;\n", "var __combe_return = null;\n", "try {\n", stmts, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})();"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleVarStatement", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var decls = ast.declarations.map((function (decl) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: decl.code }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast.code = ["var ", decls]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleIf", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var alt = (/* if */ __combe_infixOperators["!="](ast.alternative, null)
? /* then */ ast.alternative.code
: /* else */ "null");
(ast.code = ["(/* if */ ", ast.condition.code, "\n", "? /* then */ ", ast.consiquent.code, "\n", ": /* else */ ", alt, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleWhile", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var body = self.unwrapBlockAsStatements(ast.body);
(ast.code = ["(function () {\n", "while (", ast.condition.code, ") {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "}\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleDoWhile", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var body = self.unwrapBlockAsStatements(ast.body);
(ast.code = ["(function () {\n", "do {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "} while (", ast.condition.code, ");\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleFor", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var init = (/* if */ __combe_infixOperators["!="](ast.initialize, null)
? /* then */ ast.initialize.code
: /* else */ null);
var cond = (/* if */ __combe_infixOperators["!="](ast.condition, null)
? /* then */ ast.condition.code
: /* else */ null);
var inc = (/* if */ __combe_infixOperators["!="](ast.increment, null)
? /* then */ ast.increment.code
: /* else */ null);
var body = self.unwrapBlockAsStatements(ast.body);
(ast.code = ["(function () {\n", "for (", init, "; ", cond, "; ", inc, ") {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "}\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleForDeclaring", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var decls = ["var ", ast.declarations.map((function (decl) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: decl.code }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ")];
var names = [];
var inits = [];
(function (i) {
while (__combe_infixOperators["<"](i, ast.declarations.length)) {
try {
var decl = ast.declarations.subscript(i);
names.push(decl.name);
inits.push(decl.expression.code);
}
catch (__combe_e) {
if (__combe_e === __combe_break) break;
if (__combe_e !== __combe_continue) throw __combe_e;
}
(i++);
}
})(0);
names.separatedBy(", ");
inits.separatedBy(", ");
var cond = (/* if */ __combe_infixOperators["!="](ast.condition, null)
? /* then */ ast.condition.code
: /* else */ null);
var inc = (/* if */ __combe_infixOperators["!="](ast.increment, null)
? /* then */ ast.increment.code
: /* else */ null);
var body = self.unwrapBlockAsStatements(ast.body, true);
(ast.code = ["(function (", names, ") {\n", "while (", cond, ") {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e !== __combe_continue) throw __combe_e;\n", "}\n", inc, ";\n", "}\n", "})(", inits, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleDo", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var body = self.unwrapBlockAsStatements(ast.body);
(ast.code = ["(function () {\n", "/* do */ {\n", "try {\n", body, "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_break) break;\n", "if (__combe_e === __combe_continue) continue;\n", "throw __combe_e;\n", "}\n", "}\n", "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleTryCatch", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var tryFragment = ["try {\n", ast.tryBody.code, ";\n", "}\n"];
var catchFragment = null;
(/* if */ __combe_infixOperators["!="](ast.catchBody, null)
? /* then */ (function () {
(catchFragment = ["catch (", ast.catchVariable, ") {\n", ast.catchBody.code, ";\n", "}\n"]);
})()
: /* else */ null);
var finallyBody = null;
(/* if */ __combe_infixOperators["!="](ast.finallyBody, null)
? /* then */ (function () {
(finallyBody = ["finally {\n", ast.finallyBody.code, ";\n", "}\n"]);
})()
: /* else */ null);
(ast.code = ["(function () {\n", tryFragment, catchFragment, finallyBody, "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleThrow", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () { throw ", ast.argument.code, "; })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleReturn", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var valueCode = (/* if */ __combe_infixOperators["!="](ast.argument, null)
? /* then */ ast.argument.code
: /* else */ "undefined");
(ast.code = ["(function () { throw (__combe_return = { value: ", valueCode, " }); })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleBreak", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () { throw __combe_break; })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleContinue", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () { throw __combe_continue; })()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleSequence", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var exprs = ast.expressions.map((function (expr) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: expr.code }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(/* if */ exprs.isEmpty()
? /* then */ (function () {
(exprs = "null");
})()
: /* else */ null);
(ast.code = ["(", exprs, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleAssignment", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ ast.lhs.is("Subscript")
? /* then */ (function () {
(ast.code = self.generateMethodCall(ast.lhs.subject.code, CombeAst.Literal("setSubscript"), ast.lhs.arguments.concat(ast.rhs)));
})()
: /* else */ (function () {
(ast.code = ["(", ast.lhs.code, " = ", ast.rhs.code, ")"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleOperatorAssignment", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ ast.lhs.is("Subscript")
? /* then */ (function () {
var argumentsVariable = self.generateArgumentsVariable(ast.lhs.arguments);
(/* if */ __combe_infixOperators["=="](argumentsVariable, null)
? /* then */ (function () {
(argumentsVariable = ["var __combe_arguments = [", ast.lhs.arguments.map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.code;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "), "];\n"]);
})()
: /* else */ null);
var opname = ast.name.slice(0, (ast.name.length - 1));
(ast.code = ["(function () {\n", "var __combe_subject = ", ast.lhs.subject.code, ";\n", argumentsVariable, "var __combe_value = __combe_subject.subscript.apply(__combe_subject, __combe_arguments) ", opname, " ", ast.rhs, ";\n", "__combe_arguments.push(__combe_value);\n", "__combe_subject.setSubscript.apply(__combe_subject, __combe_arguments);\n", "return __combe_value;\n", "})()"]);
})()
: /* else */ (function () {
(ast.code = ["(", ast.lhs.code, " ", ast.name, " ", ast.rhs.code, ")"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handlePrefixOperator", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(", ast.name, ast.argument.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handlePostfixOperator", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(", ast.argument.code, ast.name, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleInfixOperator", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ ["==", "!=", "<", "<=", ">", ">=", "<=>"].include(ast.name)
? /* then */ (function () {
(ast.code = ["__combe_infixOperators[", ast.name.quote(), "](", ast.lhs.code, ", ", ast.rhs.code, ")"]);
})()
: /* else */ (function () {
(ast.code = ["(", ast.lhs.code, " ", ast.name, " ", ast.rhs.code, ")"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleCall", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = self.generateCall(ast.function.code, ast.arguments));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleSubscript", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = self.generateMethodCall(ast.subject.code, CombeAst.Literal("subscript"), ast.arguments));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleMethodCall", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = self.generateMethodCall(ast.subject.code, ast.name, ast.arguments));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleDot", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ ((ast.name.is("Literal") && String.isClassOf(ast.name.value)) && ast.name.value.isJavaScriptPropertyName())
? /* then */ (function () {
(ast.code = [ast.subject.code, ".", ast.name.value]);
})()
: /* else */ (function () {
(ast.code = [ast.subject.code, "[", ast.name.code, "]"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleInclusiveRange", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["Range.inclusive(", ast.lhs.code, ", ", ast.rhs.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleExclusiveRange", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["Range.exclusive(", ast.lhs.code, ", ", ast.rhs.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleThis", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = "__combe_this");
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleVariable", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ast.name);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleLiteral", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = String.sourceStringFrom(ast.value));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleArray", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](ast.arguments, null)
? /* then */ (ast.arguments = [])
: /* else */ null);
var argumentsVariable = self.generateArgumentsVariable(ast.arguments);
(/* if */ __combe_infixOperators["!="](argumentsVariable, null)
? /* then */ (function () {
(ast.code = ["(function () {\n", argumentsVariable, "return __combe_arguments;\n", "})()"]);
})()
: /* else */ (function () {
(ast.code = ["[", ast.arguments.map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.code;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "), "]"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleObject", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var prologue = ["var __combe_object = {};\n"];
var decls = ast.properties.map((function (pdecl) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [pdecl.code, ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
var epilogue = ["return __combe_object;\n"];
(ast.code = ["(function () {\n", prologue, decls, epilogue, "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleFunction", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var p = self.generateParameters(ast.parameters);
(ast.code = ["(function (", p.jsParams, ") {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", p.restParams, "try {\n", "return ", ast.body.code, ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleMethod", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var p = self.generateParameters(ast.parameters);
(ast.code = ["(function (", p.jsParams, ") {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "var self = this;\n", p.restParams, "try {\n", "return ", ast.body.code, ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleRule", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var p = self.generateParameters(ast.parameters);
var declareVars = null;
(/* if */ __combe_infixOperators[">="](ast.declareVariables.length, 1)
? /* then */ (function () {
(declareVars = ["var ", ast.declareVariables.separatedBy(", "), ";\n"]);
})()
: /* else */ null);
(/* if */ (__combe_infixOperators["=="](p.jsParams, null) && __combe_infixOperators["=="](p.restParams, null))
? /* then */ (function () {
var innerFunction = ["(function () {\n", "var self = this;\n", declareVars, "return ", ast.body.code, ".call(this);\n", "})"];
var innerFunctionCode = Array.deepJoinIOList(innerFunction);
var hash = crypto.createHash("md5");
hash.update(innerFunctionCode);
var digest = hash.digest("base64").slice(0, (-2));
(ast.code = ["(function () {\n", "return this.__combe_memoize(", digest.quote(), ", ", innerFunction, ");\n", "})"]);
})()
: /* else */ (function () {
(ast.code = ["(function (", p.jsParams, ") {\n", p.restParams, "var self = this;\n", declareVars, "return ", ast.body.code, ".call(this);\n", "})"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleVariableDeclaration", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["!="](ast.expression, null)
? /* then */ (function () {
(ast.code = [ast.name, " = ", ast.expression.code]);
})()
: /* else */ (function () {
(ast.code = ast.name);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleBlock", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var stmts = ast.statements.map((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [stmt.code, ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(ast.code = ["(function () {\n", stmts, "})()"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleSplatArgument", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ast.argument.code);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleParameter", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleSplatParameter", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleValueProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["__combe_defineValueProperty(", "__combe_object, ", ast.name.code, ", ", ast.value.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleGetProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["__combe_defineGetProperty(", "__combe_object, ", ast.name.code, ", ", ast.value.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleSetProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["__combe_defineSetProperty(", "__combe_object, ", ast.name.code, ", ", ast.value.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleDescribeProperty", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["__combe_defineDescribedProperty(", "__combe_object, ", ast.name.code, ", ", ast.value.code, ")"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleChoicePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var ps = ast.patterns.map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: p.code }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast.code = ["(function () {\n", "return this.__combe_choice(", ps, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleSequencePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var ps = ast.patterns.slice(0, (ast.patterns.length - 1)).map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [p.code, ".call(this);\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
ps.push(["return ", ast.patterns.last.code, ".call(this);\n"]);
(ast.code = ["(function () {\n", ps, "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleNotPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.__combe_not(", ast.pattern.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleLookaheadPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.__combe_lookahead(", ast.pattern.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleHashOperatorPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.handleHashPattern(", ast.pattern.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleRepeatPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.__combe_repeat(", ast.pattern.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleNonZeroRepeatPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.__combe_nonZeroRepeat(", ast.pattern.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleOptionalPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.__combe_optional(", ast.pattern.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleBindPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return (", ast.name, " = ", ast.pattern.code, ".call(this));\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleCallPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var argumentsVariable = self.generateArgumentsVariable(ast.arguments);
(/* if */ __combe_infixOperators["!="](argumentsVariable, null)
? /* then */ (function () {
(ast.code = ["(function () {\n", "var __combe_this = this;\n", "var __combe_subject = ", ast.pattern.code, ";\n", argumentsVariable, "return __combe_subject.apply(__combe_this, __combe_arguments);\n", "})"]);
})()
: /* else */ (function () {
var as = ast.arguments.map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.code;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", ");
(ast.code = ["(function () {\n", "var __combe_this = this;\n", "return ", ast.pattern.code, ".call(this, ", as, ");\n", "})"]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handlePredicatePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var pattern = ["(function () {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "try {\n", "return ", ast.body.code, ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"];
(ast.code = ["(function () {\n", "return this.__combe_predicate(", pattern, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleActionPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "try {\n", "return ", ast.body.code, ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleImmediateActionPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
var pattern = ["(function () {\n", "var __combe_this = this;\n", "var __combe_return = null;\n", "try {\n", "return ", ast.body.code, ";\n", "}\n", "catch (__combe_e) {\n", "if (__combe_e === __combe_return) return __combe_return.value;\n", "throw __combe_e;\n", "}\n", "})"];
(ast.code = [pattern, ".call(this)"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleStringPattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(ast.code = ["(function () {\n", "return this.handleStringPattern(", ast.argument.code, ");\n", "})"]);
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "handleVariablePattern", (function (ast) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ ast.containingScope.variables.include(ast.name)
? /* then */ (function () {
(ast.code = [ast.name]);
})()
: /* else */ (function () {
(ast.code = ["this.", ast.name]);
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "unwrapBlockAsStatements", (function (ast, ignoreDefAndVarTest) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](ignoreDefAndVarTest, null)
? /* then */ (ignoreDefAndVarTest = false)
: /* else */ null);
(/* if */ __combe_infixOperators["=="](ast, null)
? /* then */ (function () {
(function () { throw (__combe_return = { value: null }); })();
})()
: /* else */ (/* if */ (ast.type === "Block")
? /* then */ (function () {
var stmts = ast.statements.map((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: [stmt.code, ";\n"] }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(/* if */ (ast.statements.some((function (stmt) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
(function () { throw (__combe_return = { value: ["VarStatement"].include(stmt.type) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})) || ignoreDefAndVarTest)
? /* then */ (function () {
(function () { throw (__combe_return = { value: stmts }); })();
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: ["(function () {\n", stmts, "})()"] }); })();
})());
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: [ast.code, ";\n"] }); })();
})()));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "generateArgumentsVariable", (function (args) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ (__combe_infixOperators["=="](args, null) || __combe_infixOperators["=="](args.length, 0))
? /* then */ (function () {
(function () { throw (__combe_return = { value: null }); })();
})()
: /* else */ (/* if */ ((args.length === 1) && args.subscript(0).is("SplatArgument"))
? /* then */ (function () {
(function () { throw (__combe_return = { value: ["var __combe_arguments = ", args.subscript(0).code, ";\n"] }); })();
})()
: /* else */ (/* if */ args.any((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.is("SplatArgument");
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}))
? /* then */ (function () {
var initialArgumentsLimit = args.indexOfPredicate((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.is("SplatArgument");
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
var initialArgumentsCode = args.slice(0, initialArgumentsLimit).map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.code;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
var code = ["var __combe_arguments = [", initialArgumentsCode.separatedBy(", "), "];\n"];
(function (i) {
while (__combe_infixOperators["<"](i, args.length)) {
try {
(/* if */ args.subscript(i).is("SplatArgument")
? /* then */ (function () {
code.push("__combe_arguments.pushAll(", args.subscript(i).code, ");\n");
})()
: /* else */ (function () {
code.push("__combe_arguments.push(", arg.subscript(i).code, ");\n");
})());
}
catch (__combe_e) {
if (__combe_e === __combe_break) break;
if (__combe_e !== __combe_continue) throw __combe_e;
}
(i++);
}
})(initialArgumentsLimit);
(function () { throw (__combe_return = { value: code }); })();
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: null }); })();
})())));
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "generateCall", (function (functionCode, args) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](args, null)
? /* then */ (args = [])
: /* else */ null);
var argumentsVariable = self.generateArgumentsVariable(args);
(/* if */ __combe_infixOperators["!="](argumentsVariable, null)
? /* then */ (function () {
(function () { throw (__combe_return = { value: ["(function () {\n", "var __combe_subject = ", functionCode, ";\n", argumentsVariable, "return __combe_subject.apply(null, __combe_arguments);\n", "})()"] }); })();
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: [functionCode, "(", args.map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.code;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "), ")"] }); })();
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "generateMethodCall", (function (subjectCode, name, args) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](args, null)
? /* then */ (args = [])
: /* else */ null);
var argumentsVariable = self.generateArgumentsVariable(args);
(/* if */ __combe_infixOperators["!="](argumentsVariable, null)
? /* then */ (function () {
(function () { throw (__combe_return = { value: ["(function () {\n", "var __combe_subject = ", subjectCode, ";\n", "var __combe_name = ", name.code, ";\n", argumentsVariable, "return __combe_subject[__combe_name].apply(__combe_subject, __combe_arguments);\n", "})()"] }); })();
})()
: /* else */ (function () {
(args = args.map((function (a) {
var __combe_this = this;
var __combe_return = null;
try {
return a.code;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "));
(/* if */ ((name.is("Literal") && String.isClassOf(name.value)) && name.value.isJavaScriptPropertyName())
? /* then */ (function () {
(function () { throw (__combe_return = { value: [subjectCode, ".", name.value, "(", args, ")"] }); })();
})()
: /* else */ (function () {
(function () { throw (__combe_return = { value: [subjectCode, "[", name.code, "](", args, ")"] }); })();
})());
})());
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "generateParameters", (function (params) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ (__combe_infixOperators["=="](params, null) || __combe_infixOperators["=="](params.length, 0))
? /* then */ (function () { throw (__combe_return = { value: (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "jsParams", null);
__combe_defineValueProperty(__combe_object, "restParams", null);
return __combe_object;
})() }); })()
: /* else */ null);
assert(__combe_infixOperators["<="](params.count((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.is("SplatParameter");
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})), 1));
var jsParams = null;
var restParams = null;
(/* if */ params.any((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.is("SplatParameter");
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}))
? /* then */ (function () {
(/* if */ __combe_infixOperators["=="](params.length, 1)
? /* then */ (function () {
(restParams = ["var ", params.subscript(0).name, " = Array.slice(arguments);\n"]);
})()
: /* else */ (/* if */ params.last.is("SplatParameter")
? /* then */ (function () {
(jsParams = params.dropLast(1).map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.name;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "));
(restParams = ["var ", params.last.name, " = Array.slice(arguments, ", (params.length - 1).toString(), ");\n"]);
})()
: /* else */ (function () {
var splatIndex = params.indexOfPredicate((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.is("SplatParameter");
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
(jsParams = params.take(splatIndex).map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.name;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "));
var remParams = params.drop((splatIndex + 1));
(restParams = ["var ", params.subscript(splatIndex).name, " = Array.slice(arguments, ", splatIndex.toString(), "arguments.length - ", remParams.length.toString(), ");\n"]);
remParams.each((function (p, i) {
var __combe_this = this;
var __combe_return = null;
try {
return (function () {
restParams.push("var ", p.name, " = arguments[", ((splatIndex + 1) + i).toString(), "];\n");
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
})()));
})()
: /* else */ (function () {
(jsParams = params.map((function (p) {
var __combe_this = this;
var __combe_return = null;
try {
return p.name;
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})).separatedBy(", "));
})());
(function () { throw (__combe_return = { value: (function () {
var __combe_object = {};
__combe_defineValueProperty(__combe_object, "jsParams", jsParams);
__combe_defineValueProperty(__combe_object, "restParams", restParams);
return __combe_object;
})() }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
__combe_defineValueProperty(__combe_object, "gensymIndex", 0);
__combe_defineValueProperty(__combe_object, "gensym", (function (name) {
var __combe_this = this;
var __combe_return = null;
var self = this;
try {
return (function () {
(/* if */ __combe_infixOperators["=="](name, null)
? /* then */ (name = "__unnamed")
: /* else */ null);
(function () { throw (__combe_return = { value: (("__combe_gensym_" + name) + (self.gensymIndex++)) }); })();
})();
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
}));
return __combe_object;
})()));
}
catch (__combe_e) {
if (__combe_e === __combe_return) return __combe_return.value;
throw __combe_e;
}
})();